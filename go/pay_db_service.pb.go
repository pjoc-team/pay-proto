// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pay_db_service.proto

package pay

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BasePayOrder struct {
	Version string `protobuf:"bytes,100,opt,name=version,proto3" json:"version,omitempty"`
	// 业务订单号
	OutTradeNo string `protobuf:"bytes,1,opt,name=out_trade_no,json=outTradeNo,proto3" json:"out_trade_no,omitempty"`
	// 渠道账号
	ChannelAccount string `protobuf:"bytes,2,opt,name=channel_account,json=channelAccount,proto3" json:"channel_account,omitempty"`
	// 渠道订单号
	ChannelOrderId string `protobuf:"bytes,21,opt,name=channel_order_id,json=channelOrderId,proto3" json:"channel_order_id,omitempty"`
	// 网关订单号
	GatewayOrderId string `protobuf:"bytes,22,opt,name=gateway_order_id,json=gatewayOrderId,proto3" json:"gateway_order_id,omitempty"`
	// 支付金额（分）
	PayAmount uint32 `protobuf:"varint,3,opt,name=pay_amount,json=payAmount,proto3" json:"pay_amount,omitempty"`
	// 币种
	Currency string `protobuf:"bytes,25,opt,name=currency,proto3" json:"currency,omitempty"`
	// 接收通知的地址，不能带参数（即：不能包含问号）
	NotifyUrl string `protobuf:"bytes,4,opt,name=notify_url,json=notifyUrl,proto3" json:"notify_url,omitempty"`
	// 支付后跳转的前端地址
	ReturnUrl string `protobuf:"bytes,5,opt,name=return_url,json=returnUrl,proto3" json:"return_url,omitempty"`
	// 系统给商户分配的app_id
	AppId string `protobuf:"bytes,6,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	// 加密方法，rsa和md5，默认rsa
	SignType string `protobuf:"bytes,7,opt,name=sign_type,json=signType,proto3" json:"sign_type,omitempty"`
	// 下单时间
	OrderTime string `protobuf:"bytes,8,opt,name=order_time,json=orderTime,proto3" json:"order_time,omitempty"`
	// 请求到网关的时间
	RequestTime string `protobuf:"bytes,20,opt,name=request_time,json=requestTime,proto3" json:"request_time,omitempty"`
	// 订单创建日期
	CreateDate string `protobuf:"bytes,23,opt,name=create_date,json=createDate,proto3" json:"create_date,omitempty"`
	// 发起支付的用户ip
	UserIp string `protobuf:"bytes,9,opt,name=user_ip,json=userIp,proto3" json:"user_ip,omitempty"`
	// 用户在业务系统的id
	UserId string `protobuf:"bytes,18,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 支付者账号，可选
	PayerAccount string `protobuf:"bytes,10,opt,name=payer_account,json=payerAccount,proto3" json:"payer_account,omitempty"`
	// 产品id
	ProductId string `protobuf:"bytes,11,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	// 商品名称
	ProductName string `protobuf:"bytes,12,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`
	// 商品描述
	ProductDescribe string `protobuf:"bytes,13,opt,name=product_describe,json=productDescribe,proto3" json:"product_describe,omitempty"`
	// 回调业务系统时需要带上的字符串
	CallbackJson string `protobuf:"bytes,16,opt,name=callback_json,json=callbackJson,proto3" json:"callback_json,omitempty"`
	// 扩展json
	ExtJson string `protobuf:"bytes,17,opt,name=ext_json,json=extJson,proto3" json:"ext_json,omitempty"`
	// 渠道返回的json
	ChannelResponseJson string `protobuf:"bytes,26,opt,name=channel_response_json,json=channelResponseJson,proto3" json:"channel_response_json,omitempty"`
	// 下单错误信息
	ErrorMessage string `protobuf:"bytes,27,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// 渠道id（非必须），如果未指定method，系统会根据method来找到可用的channel_id
	ChannelId            string   `protobuf:"bytes,19,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Method               string   `protobuf:"bytes,98,opt,name=method,proto3" json:"method,omitempty"`
	Remark               string   `protobuf:"bytes,24,opt,name=remark,proto3" json:"remark,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BasePayOrder) Reset()         { *m = BasePayOrder{} }
func (m *BasePayOrder) String() string { return proto.CompactTextString(m) }
func (*BasePayOrder) ProtoMessage()    {}
func (*BasePayOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_875a0f15f892e9f8, []int{0}
}

func (m *BasePayOrder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BasePayOrder.Unmarshal(m, b)
}
func (m *BasePayOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BasePayOrder.Marshal(b, m, deterministic)
}
func (m *BasePayOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BasePayOrder.Merge(m, src)
}
func (m *BasePayOrder) XXX_Size() int {
	return xxx_messageInfo_BasePayOrder.Size(m)
}
func (m *BasePayOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_BasePayOrder.DiscardUnknown(m)
}

var xxx_messageInfo_BasePayOrder proto.InternalMessageInfo

func (m *BasePayOrder) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *BasePayOrder) GetOutTradeNo() string {
	if m != nil {
		return m.OutTradeNo
	}
	return ""
}

func (m *BasePayOrder) GetChannelAccount() string {
	if m != nil {
		return m.ChannelAccount
	}
	return ""
}

func (m *BasePayOrder) GetChannelOrderId() string {
	if m != nil {
		return m.ChannelOrderId
	}
	return ""
}

func (m *BasePayOrder) GetGatewayOrderId() string {
	if m != nil {
		return m.GatewayOrderId
	}
	return ""
}

func (m *BasePayOrder) GetPayAmount() uint32 {
	if m != nil {
		return m.PayAmount
	}
	return 0
}

func (m *BasePayOrder) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *BasePayOrder) GetNotifyUrl() string {
	if m != nil {
		return m.NotifyUrl
	}
	return ""
}

func (m *BasePayOrder) GetReturnUrl() string {
	if m != nil {
		return m.ReturnUrl
	}
	return ""
}

func (m *BasePayOrder) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *BasePayOrder) GetSignType() string {
	if m != nil {
		return m.SignType
	}
	return ""
}

func (m *BasePayOrder) GetOrderTime() string {
	if m != nil {
		return m.OrderTime
	}
	return ""
}

func (m *BasePayOrder) GetRequestTime() string {
	if m != nil {
		return m.RequestTime
	}
	return ""
}

func (m *BasePayOrder) GetCreateDate() string {
	if m != nil {
		return m.CreateDate
	}
	return ""
}

func (m *BasePayOrder) GetUserIp() string {
	if m != nil {
		return m.UserIp
	}
	return ""
}

func (m *BasePayOrder) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *BasePayOrder) GetPayerAccount() string {
	if m != nil {
		return m.PayerAccount
	}
	return ""
}

func (m *BasePayOrder) GetProductId() string {
	if m != nil {
		return m.ProductId
	}
	return ""
}

func (m *BasePayOrder) GetProductName() string {
	if m != nil {
		return m.ProductName
	}
	return ""
}

func (m *BasePayOrder) GetProductDescribe() string {
	if m != nil {
		return m.ProductDescribe
	}
	return ""
}

func (m *BasePayOrder) GetCallbackJson() string {
	if m != nil {
		return m.CallbackJson
	}
	return ""
}

func (m *BasePayOrder) GetExtJson() string {
	if m != nil {
		return m.ExtJson
	}
	return ""
}

func (m *BasePayOrder) GetChannelResponseJson() string {
	if m != nil {
		return m.ChannelResponseJson
	}
	return ""
}

func (m *BasePayOrder) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func (m *BasePayOrder) GetChannelId() string {
	if m != nil {
		return m.ChannelId
	}
	return ""
}

func (m *BasePayOrder) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *BasePayOrder) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

type PayOrder struct {
	BasePayOrder         *BasePayOrder `protobuf:"bytes,1,opt,name=base_pay_order,json=basePayOrder,proto3" json:"base_pay_order,omitempty"`
	OrderStatus          string        `protobuf:"bytes,2,opt,name=order_status,json=orderStatus,proto3" json:"order_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *PayOrder) Reset()         { *m = PayOrder{} }
func (m *PayOrder) String() string { return proto.CompactTextString(m) }
func (*PayOrder) ProtoMessage()    {}
func (*PayOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_875a0f15f892e9f8, []int{1}
}

func (m *PayOrder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PayOrder.Unmarshal(m, b)
}
func (m *PayOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PayOrder.Marshal(b, m, deterministic)
}
func (m *PayOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PayOrder.Merge(m, src)
}
func (m *PayOrder) XXX_Size() int {
	return xxx_messageInfo_PayOrder.Size(m)
}
func (m *PayOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_PayOrder.DiscardUnknown(m)
}

var xxx_messageInfo_PayOrder proto.InternalMessageInfo

func (m *PayOrder) GetBasePayOrder() *BasePayOrder {
	if m != nil {
		return m.BasePayOrder
	}
	return nil
}

func (m *PayOrder) GetOrderStatus() string {
	if m != nil {
		return m.OrderStatus
	}
	return ""
}

type PayOrderOk struct {
	BasePayOrder         *BasePayOrder `protobuf:"bytes,1,opt,name=base_pay_order,json=basePayOrder,proto3" json:"base_pay_order,omitempty"`
	SuccessTime          string        `protobuf:"bytes,2,opt,name=success_time,json=successTime,proto3" json:"success_time,omitempty"`
	BalanceDate          string        `protobuf:"bytes,3,opt,name=balance_date,json=balanceDate,proto3" json:"balance_date,omitempty"`
	FareAmt              uint32        `protobuf:"varint,4,opt,name=fare_amt,json=fareAmt,proto3" json:"fare_amt,omitempty"`
	FactAmt              uint32        `protobuf:"varint,5,opt,name=fact_amt,json=factAmt,proto3" json:"fact_amt,omitempty"`
	SendNotifyStats      string        `protobuf:"bytes,6,opt,name=send_notify_stats,json=sendNotifyStats,proto3" json:"send_notify_stats,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *PayOrderOk) Reset()         { *m = PayOrderOk{} }
func (m *PayOrderOk) String() string { return proto.CompactTextString(m) }
func (*PayOrderOk) ProtoMessage()    {}
func (*PayOrderOk) Descriptor() ([]byte, []int) {
	return fileDescriptor_875a0f15f892e9f8, []int{2}
}

func (m *PayOrderOk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PayOrderOk.Unmarshal(m, b)
}
func (m *PayOrderOk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PayOrderOk.Marshal(b, m, deterministic)
}
func (m *PayOrderOk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PayOrderOk.Merge(m, src)
}
func (m *PayOrderOk) XXX_Size() int {
	return xxx_messageInfo_PayOrderOk.Size(m)
}
func (m *PayOrderOk) XXX_DiscardUnknown() {
	xxx_messageInfo_PayOrderOk.DiscardUnknown(m)
}

var xxx_messageInfo_PayOrderOk proto.InternalMessageInfo

func (m *PayOrderOk) GetBasePayOrder() *BasePayOrder {
	if m != nil {
		return m.BasePayOrder
	}
	return nil
}

func (m *PayOrderOk) GetSuccessTime() string {
	if m != nil {
		return m.SuccessTime
	}
	return ""
}

func (m *PayOrderOk) GetBalanceDate() string {
	if m != nil {
		return m.BalanceDate
	}
	return ""
}

func (m *PayOrderOk) GetFareAmt() uint32 {
	if m != nil {
		return m.FareAmt
	}
	return 0
}

func (m *PayOrderOk) GetFactAmt() uint32 {
	if m != nil {
		return m.FactAmt
	}
	return 0
}

func (m *PayOrderOk) GetSendNotifyStats() string {
	if m != nil {
		return m.SendNotifyStats
	}
	return ""
}

type PayNotify struct {
	GatewayOrderId       string   `protobuf:"bytes,1,opt,name=gateway_order_id,json=gatewayOrderId,proto3" json:"gateway_order_id,omitempty"`
	CreateDate           string   `protobuf:"bytes,2,opt,name=create_date,json=createDate,proto3" json:"create_date,omitempty"`
	FailTimes            uint32   `protobuf:"varint,3,opt,name=fail_times,json=failTimes,proto3" json:"fail_times,omitempty"`
	NotifyTime           string   `protobuf:"bytes,4,opt,name=notify_time,json=notifyTime,proto3" json:"notify_time,omitempty"`
	Status               string   `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	NextNotifyTime       string   `protobuf:"bytes,7,opt,name=next_notify_time,json=nextNotifyTime,proto3" json:"next_notify_time,omitempty"`
	ErrorMessage         string   `protobuf:"bytes,6,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PayNotify) Reset()         { *m = PayNotify{} }
func (m *PayNotify) String() string { return proto.CompactTextString(m) }
func (*PayNotify) ProtoMessage()    {}
func (*PayNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_875a0f15f892e9f8, []int{3}
}

func (m *PayNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PayNotify.Unmarshal(m, b)
}
func (m *PayNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PayNotify.Marshal(b, m, deterministic)
}
func (m *PayNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PayNotify.Merge(m, src)
}
func (m *PayNotify) XXX_Size() int {
	return xxx_messageInfo_PayNotify.Size(m)
}
func (m *PayNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_PayNotify.DiscardUnknown(m)
}

var xxx_messageInfo_PayNotify proto.InternalMessageInfo

func (m *PayNotify) GetGatewayOrderId() string {
	if m != nil {
		return m.GatewayOrderId
	}
	return ""
}

func (m *PayNotify) GetCreateDate() string {
	if m != nil {
		return m.CreateDate
	}
	return ""
}

func (m *PayNotify) GetFailTimes() uint32 {
	if m != nil {
		return m.FailTimes
	}
	return 0
}

func (m *PayNotify) GetNotifyTime() string {
	if m != nil {
		return m.NotifyTime
	}
	return ""
}

func (m *PayNotify) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *PayNotify) GetNextNotifyTime() string {
	if m != nil {
		return m.NextNotifyTime
	}
	return ""
}

func (m *PayNotify) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

type PayNotifyOk struct {
	GatewayOrderId       string   `protobuf:"bytes,1,opt,name=gateway_order_id,json=gatewayOrderId,proto3" json:"gateway_order_id,omitempty"`
	CreateDate           string   `protobuf:"bytes,2,opt,name=create_date,json=createDate,proto3" json:"create_date,omitempty"`
	FailTimes            uint32   `protobuf:"varint,3,opt,name=fail_times,json=failTimes,proto3" json:"fail_times,omitempty"`
	NotifyTime           string   `protobuf:"bytes,4,opt,name=notify_time,json=notifyTime,proto3" json:"notify_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PayNotifyOk) Reset()         { *m = PayNotifyOk{} }
func (m *PayNotifyOk) String() string { return proto.CompactTextString(m) }
func (*PayNotifyOk) ProtoMessage()    {}
func (*PayNotifyOk) Descriptor() ([]byte, []int) {
	return fileDescriptor_875a0f15f892e9f8, []int{4}
}

func (m *PayNotifyOk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PayNotifyOk.Unmarshal(m, b)
}
func (m *PayNotifyOk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PayNotifyOk.Marshal(b, m, deterministic)
}
func (m *PayNotifyOk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PayNotifyOk.Merge(m, src)
}
func (m *PayNotifyOk) XXX_Size() int {
	return xxx_messageInfo_PayNotifyOk.Size(m)
}
func (m *PayNotifyOk) XXX_DiscardUnknown() {
	xxx_messageInfo_PayNotifyOk.DiscardUnknown(m)
}

var xxx_messageInfo_PayNotifyOk proto.InternalMessageInfo

func (m *PayNotifyOk) GetGatewayOrderId() string {
	if m != nil {
		return m.GatewayOrderId
	}
	return ""
}

func (m *PayNotifyOk) GetCreateDate() string {
	if m != nil {
		return m.CreateDate
	}
	return ""
}

func (m *PayNotifyOk) GetFailTimes() uint32 {
	if m != nil {
		return m.FailTimes
	}
	return 0
}

func (m *PayNotifyOk) GetNotifyTime() string {
	if m != nil {
		return m.NotifyTime
	}
	return ""
}

type PayOrderResponse struct {
	PayOrders            []*PayOrder `protobuf:"bytes,1,rep,name=pay_orders,json=payOrders,proto3" json:"pay_orders,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *PayOrderResponse) Reset()         { *m = PayOrderResponse{} }
func (m *PayOrderResponse) String() string { return proto.CompactTextString(m) }
func (*PayOrderResponse) ProtoMessage()    {}
func (*PayOrderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_875a0f15f892e9f8, []int{5}
}

func (m *PayOrderResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PayOrderResponse.Unmarshal(m, b)
}
func (m *PayOrderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PayOrderResponse.Marshal(b, m, deterministic)
}
func (m *PayOrderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PayOrderResponse.Merge(m, src)
}
func (m *PayOrderResponse) XXX_Size() int {
	return xxx_messageInfo_PayOrderResponse.Size(m)
}
func (m *PayOrderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PayOrderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PayOrderResponse proto.InternalMessageInfo

func (m *PayOrderResponse) GetPayOrders() []*PayOrder {
	if m != nil {
		return m.PayOrders
	}
	return nil
}

type PayOrderOkResponse struct {
	PayOrderOks          []*PayOrderOk `protobuf:"bytes,1,rep,name=pay_order_oks,json=payOrderOks,proto3" json:"pay_order_oks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *PayOrderOkResponse) Reset()         { *m = PayOrderOkResponse{} }
func (m *PayOrderOkResponse) String() string { return proto.CompactTextString(m) }
func (*PayOrderOkResponse) ProtoMessage()    {}
func (*PayOrderOkResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_875a0f15f892e9f8, []int{6}
}

func (m *PayOrderOkResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PayOrderOkResponse.Unmarshal(m, b)
}
func (m *PayOrderOkResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PayOrderOkResponse.Marshal(b, m, deterministic)
}
func (m *PayOrderOkResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PayOrderOkResponse.Merge(m, src)
}
func (m *PayOrderOkResponse) XXX_Size() int {
	return xxx_messageInfo_PayOrderOkResponse.Size(m)
}
func (m *PayOrderOkResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PayOrderOkResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PayOrderOkResponse proto.InternalMessageInfo

func (m *PayOrderOkResponse) GetPayOrderOks() []*PayOrderOk {
	if m != nil {
		return m.PayOrderOks
	}
	return nil
}

type PayNotifyResponse struct {
	PayNotifies          []*PayNotify `protobuf:"bytes,1,rep,name=pay_notifies,json=payNotifies,proto3" json:"pay_notifies,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *PayNotifyResponse) Reset()         { *m = PayNotifyResponse{} }
func (m *PayNotifyResponse) String() string { return proto.CompactTextString(m) }
func (*PayNotifyResponse) ProtoMessage()    {}
func (*PayNotifyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_875a0f15f892e9f8, []int{7}
}

func (m *PayNotifyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PayNotifyResponse.Unmarshal(m, b)
}
func (m *PayNotifyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PayNotifyResponse.Marshal(b, m, deterministic)
}
func (m *PayNotifyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PayNotifyResponse.Merge(m, src)
}
func (m *PayNotifyResponse) XXX_Size() int {
	return xxx_messageInfo_PayNotifyResponse.Size(m)
}
func (m *PayNotifyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PayNotifyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PayNotifyResponse proto.InternalMessageInfo

func (m *PayNotifyResponse) GetPayNotifies() []*PayNotify {
	if m != nil {
		return m.PayNotifies
	}
	return nil
}

type PayNotifyOkResponse struct {
	PayNotifyOks         []*PayNotifyOk `protobuf:"bytes,1,rep,name=pay_notify_oks,json=payNotifyOks,proto3" json:"pay_notify_oks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *PayNotifyOkResponse) Reset()         { *m = PayNotifyOkResponse{} }
func (m *PayNotifyOkResponse) String() string { return proto.CompactTextString(m) }
func (*PayNotifyOkResponse) ProtoMessage()    {}
func (*PayNotifyOkResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_875a0f15f892e9f8, []int{8}
}

func (m *PayNotifyOkResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PayNotifyOkResponse.Unmarshal(m, b)
}
func (m *PayNotifyOkResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PayNotifyOkResponse.Marshal(b, m, deterministic)
}
func (m *PayNotifyOkResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PayNotifyOkResponse.Merge(m, src)
}
func (m *PayNotifyOkResponse) XXX_Size() int {
	return xxx_messageInfo_PayNotifyOkResponse.Size(m)
}
func (m *PayNotifyOkResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PayNotifyOkResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PayNotifyOkResponse proto.InternalMessageInfo

func (m *PayNotifyOkResponse) GetPayNotifyOks() []*PayNotifyOk {
	if m != nil {
		return m.PayNotifyOks
	}
	return nil
}

func init() {
	proto.RegisterType((*BasePayOrder)(nil), "pay.BasePayOrder")
	proto.RegisterType((*PayOrder)(nil), "pay.PayOrder")
	proto.RegisterType((*PayOrderOk)(nil), "pay.PayOrderOk")
	proto.RegisterType((*PayNotify)(nil), "pay.PayNotify")
	proto.RegisterType((*PayNotifyOk)(nil), "pay.PayNotifyOk")
	proto.RegisterType((*PayOrderResponse)(nil), "pay.PayOrderResponse")
	proto.RegisterType((*PayOrderOkResponse)(nil), "pay.PayOrderOkResponse")
	proto.RegisterType((*PayNotifyResponse)(nil), "pay.PayNotifyResponse")
	proto.RegisterType((*PayNotifyOkResponse)(nil), "pay.PayNotifyOkResponse")
}

func init() { proto.RegisterFile("pay_db_service.proto", fileDescriptor_875a0f15f892e9f8) }

var fileDescriptor_875a0f15f892e9f8 = []byte{
	// 1203 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x57, 0x4f, 0x6f, 0xdb, 0xc6,
	0x13, 0x85, 0xe2, 0x5f, 0x64, 0x7b, 0xf4, 0xd7, 0xeb, 0x58, 0x59, 0x2b, 0x09, 0xe2, 0x30, 0x87,
	0x9f, 0x1b, 0x14, 0x36, 0xe2, 0x00, 0x2d, 0xd0, 0x53, 0x13, 0x04, 0x01, 0x9c, 0x26, 0x56, 0x2a,
	0x3b, 0x45, 0x6f, 0xc4, 0x92, 0x5c, 0xc9, 0x8c, 0x44, 0x2e, 0xbb, 0xbb, 0x74, 0xc3, 0x6b, 0xfb,
	0x11, 0x7a, 0xe9, 0xf7, 0xea, 0xb1, 0xd7, 0x5e, 0xfb, 0x11, 0x0a, 0x14, 0x3b, 0xbb, 0xa4, 0x45,
	0x49, 0x01, 0x6a, 0xf4, 0xd2, 0x9b, 0xf6, 0xbd, 0xc7, 0xc7, 0x99, 0xd9, 0x99, 0x91, 0x04, 0x77,
	0x32, 0x56, 0xf8, 0x51, 0xe0, 0x2b, 0x2e, 0xaf, 0xe2, 0x90, 0x1f, 0x65, 0x52, 0x68, 0x41, 0x36,
	0x32, 0x56, 0x0c, 0xef, 0x4f, 0x85, 0x98, 0xce, 0xf9, 0x31, 0xcb, 0xe2, 0x63, 0x96, 0xa6, 0x42,
	0x33, 0x1d, 0x8b, 0x54, 0x59, 0xc9, 0xf0, 0xa1, 0x63, 0xf1, 0x14, 0xe4, 0x93, 0x63, 0x1d, 0x27,
	0x5c, 0x69, 0x96, 0x64, 0x4e, 0xd0, 0x0e, 0x45, 0x92, 0x88, 0xd4, 0x9e, 0xbc, 0x9f, 0x37, 0xa1,
	0xfd, 0x82, 0x29, 0xfe, 0x8e, 0x15, 0x23, 0x19, 0x71, 0x49, 0x28, 0x6c, 0x5e, 0x71, 0xa9, 0x62,
	0x91, 0xd2, 0xe8, 0xa0, 0x71, 0xb8, 0x3d, 0x2e, 0x8f, 0xe4, 0x00, 0xda, 0x22, 0xd7, 0xbe, 0x96,
	0x2c, 0xe2, 0x7e, 0x2a, 0x68, 0x03, 0x69, 0x10, 0xb9, 0xbe, 0x30, 0xd0, 0x99, 0x20, 0xff, 0x87,
	0x5e, 0x78, 0xc9, 0xd2, 0x94, 0xcf, 0x7d, 0x16, 0x86, 0x22, 0x4f, 0x35, 0xbd, 0x85, 0xa2, 0xae,
	0x83, 0x9f, 0x5b, 0x94, 0x1c, 0x42, 0xbf, 0x14, 0x0a, 0xf3, 0x56, 0x3f, 0x8e, 0xe8, 0x5e, 0x4d,
	0x89, 0xc1, 0x9c, 0x46, 0x46, 0x39, 0x65, 0x9a, 0xff, 0xc8, 0x8a, 0x6b, 0xe5, 0xc0, 0x2a, 0x1d,
	0x5e, 0x2a, 0x1f, 0x00, 0x98, 0x9a, 0xb1, 0x04, 0xdf, 0xbb, 0x71, 0xd0, 0x38, 0xec, 0x8c, 0xb7,
	0x33, 0x56, 0x3c, 0x47, 0x80, 0x0c, 0x61, 0x2b, 0xcc, 0xa5, 0xe4, 0x69, 0x58, 0xd0, 0x7d, 0x34,
	0xa8, 0xce, 0xe6, 0xd1, 0x54, 0xe8, 0x78, 0x52, 0xf8, 0xb9, 0x9c, 0xd3, 0xff, 0x21, 0xbb, 0x6d,
	0x91, 0xf7, 0x72, 0x6e, 0x68, 0xc9, 0x75, 0x2e, 0x53, 0xa4, 0x6f, 0x5b, 0xda, 0x22, 0x86, 0xde,
	0x83, 0x26, 0xcb, 0x32, 0x13, 0x58, 0x13, 0xa9, 0xdb, 0x2c, 0xcb, 0x4e, 0x23, 0x72, 0x0f, 0xb6,
	0x55, 0x3c, 0x4d, 0x7d, 0x5d, 0x64, 0x9c, 0x6e, 0xda, 0x37, 0x1a, 0xe0, 0xa2, 0xc8, 0xb8, 0xb1,
	0xb4, 0xe9, 0x98, 0xdb, 0xa1, 0x5b, 0xd6, 0x12, 0x91, 0x8b, 0x38, 0xe1, 0xe4, 0x11, 0xb4, 0x25,
	0xff, 0x21, 0xe7, 0x4a, 0x5b, 0xc1, 0x1d, 0x14, 0xb4, 0x1c, 0x86, 0x92, 0x87, 0xd0, 0x0a, 0x25,
	0x67, 0x9a, 0xfb, 0x11, 0xd3, 0x9c, 0xde, 0xb5, 0x97, 0x61, 0xa1, 0x97, 0x4c, 0x73, 0x72, 0x17,
	0x36, 0x73, 0x65, 0x0a, 0x96, 0xd1, 0x6d, 0x24, 0x9b, 0xe6, 0x78, 0x9a, 0x5d, 0x13, 0x11, 0x25,
	0x0b, 0x44, 0x44, 0x1e, 0x43, 0x27, 0x63, 0x05, 0x97, 0xd5, 0xe5, 0x01, 0xd2, 0x6d, 0x04, 0xcb,
	0xab, 0x33, 0x65, 0x96, 0x22, 0xca, 0x43, 0x6d, 0x0c, 0x5a, 0x36, 0x72, 0x87, 0x9c, 0x46, 0x26,
	0xf2, 0x92, 0x4e, 0x59, 0xc2, 0x69, 0xdb, 0x46, 0xee, 0xb0, 0x33, 0x96, 0x70, 0xf2, 0x19, 0xf4,
	0x4b, 0x49, 0xc4, 0x55, 0x28, 0xe3, 0x80, 0xd3, 0x0e, 0xca, 0x7a, 0x0e, 0x7f, 0xe9, 0x60, 0x13,
	0x51, 0xc8, 0xe6, 0xf3, 0x80, 0x85, 0x33, 0xff, 0x83, 0x12, 0x29, 0xed, 0xdb, 0x88, 0x4a, 0xf0,
	0xb5, 0x12, 0x29, 0xd9, 0x87, 0x2d, 0xfe, 0x51, 0x5b, 0x7e, 0xc7, 0xb6, 0x2c, 0xff, 0xa8, 0x91,
	0x3a, 0x81, 0xbd, 0xb2, 0xcf, 0x24, 0x57, 0x99, 0x48, 0x15, 0xb7, 0xba, 0x21, 0xea, 0x76, 0x1d,
	0x39, 0x76, 0x1c, 0x3e, 0xf3, 0x18, 0x3a, 0x5c, 0x4a, 0x21, 0xfd, 0x84, 0x2b, 0xc5, 0xa6, 0x9c,
	0xde, 0xb3, 0xef, 0x44, 0xf0, 0xad, 0xc5, 0x4c, 0x15, 0x4a, 0xe3, 0x38, 0xa2, 0xbb, 0xb6, 0x0a,
	0x0e, 0x39, 0x8d, 0xc8, 0x00, 0x9a, 0x09, 0xd7, 0x97, 0x22, 0xa2, 0x81, 0xad, 0xb0, 0x3d, 0x19,
	0x5c, 0xf2, 0x84, 0xc9, 0x19, 0xa5, 0x16, 0xb7, 0x27, 0x6f, 0x02, 0x5b, 0xd5, 0x00, 0x7e, 0x09,
	0xdd, 0x80, 0x29, 0xee, 0x67, 0x65, 0xcb, 0xe3, 0xa0, 0xb5, 0x4e, 0x76, 0x8e, 0x32, 0x56, 0x1c,
	0x2d, 0xce, 0xea, 0xb8, 0x1d, 0x2c, 0x4e, 0xee, 0x23, 0x68, 0xdb, 0x9e, 0x52, 0x9a, 0xe9, 0x5c,
	0xb9, 0xd1, 0x6b, 0x21, 0x76, 0x8e, 0x90, 0xf7, 0x67, 0x03, 0xa0, 0xd4, 0x8f, 0x66, 0xff, 0xea,
	0x55, 0x2a, 0x0f, 0x43, 0xae, 0x94, 0xed, 0x4f, 0xf7, 0x2a, 0x87, 0x95, 0x2d, 0x1c, 0xb0, 0x39,
	0x4b, 0x43, 0xd7, 0xa0, 0x1b, 0x56, 0xe2, 0x30, 0xec, 0xd0, 0x7d, 0xd8, 0x9a, 0x30, 0xc9, 0x7d,
	0x96, 0x68, 0x1c, 0xba, 0xce, 0x78, 0xd3, 0x9c, 0x9f, 0x27, 0xda, 0x52, 0xa1, 0x46, 0xea, 0x76,
	0x49, 0x85, 0xda, 0x50, 0x4f, 0x60, 0x47, 0xf1, 0x34, 0xf2, 0xdd, 0xc4, 0x9a, 0x64, 0x95, 0x9b,
	0xbc, 0x9e, 0x21, 0xce, 0x10, 0x37, 0x09, 0x2b, 0xef, 0xaf, 0x06, 0x6c, 0xbf, 0x63, 0x85, 0x85,
	0xd6, 0xee, 0x92, 0xc6, 0xda, 0x5d, 0xb2, 0x34, 0x5c, 0xb7, 0x56, 0x86, 0xeb, 0x01, 0xc0, 0x84,
	0xc5, 0x73, 0xcc, 0x5e, 0x95, 0xcb, 0xc6, 0x20, 0x26, 0x77, 0x65, 0x9e, 0x77, 0xe1, 0x61, 0x79,
	0xec, 0x46, 0x71, 0x3b, 0x06, 0xab, 0x33, 0x80, 0xa6, 0xbb, 0x25, 0xbb, 0x4e, 0xdc, 0xc9, 0x84,
	0x98, 0x9a, 0x66, 0x5e, 0x7c, 0xda, 0xee, 0x8e, 0xae, 0xc1, 0xcf, 0xae, 0x1d, 0x56, 0xda, 0xb4,
	0xb9, 0xda, 0xa6, 0xde, 0xaf, 0x0d, 0x68, 0x55, 0xf9, 0x8f, 0x66, 0xff, 0xa1, 0x0a, 0x78, 0x5f,
	0x43, 0xbf, 0x6a, 0x2e, 0x37, 0x7e, 0xe4, 0x73, 0xbb, 0xc2, 0x31, 0x34, 0x45, 0x1b, 0x07, 0x1b,
	0x87, 0xad, 0x93, 0x0e, 0xf6, 0x62, 0x25, 0x35, 0x1b, 0x1d, 0x3f, 0x29, 0xef, 0x14, 0xc8, 0x75,
	0x2f, 0x57, 0x1e, 0xcf, 0x70, 0x89, 0xb9, 0xf4, 0xc4, 0xac, 0xb4, 0xe9, 0xd5, 0x6c, 0x46, 0xb3,
	0x71, 0x2b, 0xab, 0x3e, 0x2b, 0xef, 0x15, 0xec, 0x54, 0x65, 0xaa, 0x9c, 0x9e, 0x82, 0xd9, 0x7c,
	0xf6, 0x2a, 0x62, 0x5e, 0x1a, 0x75, 0x4b, 0x23, 0xa7, 0x36, 0x3e, 0x67, 0x4e, 0xe2, 0xbd, 0x85,
	0xdd, 0x85, 0x72, 0x57, 0x4e, 0x5f, 0x40, 0xb7, 0x72, 0x2a, 0x16, 0x82, 0xea, 0xd7, 0xbd, 0x46,
	0x33, 0xdc, 0xb5, 0xe5, 0x41, 0x9d, 0xfc, 0xbe, 0x85, 0x29, 0xbe, 0x64, 0x9a, 0x99, 0xf1, 0x3b,
	0xb7, 0xbf, 0x05, 0xc8, 0x6b, 0x68, 0x9f, 0xb3, 0xab, 0xeb, 0x69, 0xac, 0x97, 0x68, 0x68, 0xa7,
	0x77, 0x8c, 0xdf, 0x4f, 0x63, 0xae, 0xf2, 0xb9, 0xf6, 0xe8, 0x4f, 0xbf, 0xfd, 0xf1, 0xcb, 0x2d,
	0xe2, 0x75, 0x8e, 0xaf, 0x9e, 0x1e, 0x57, 0xe5, 0xf9, 0xaa, 0xf1, 0x84, 0xbc, 0x81, 0xee, 0xfb,
	0xcc, 0x5c, 0xf1, 0xcd, 0xdd, 0x86, 0xab, 0x6e, 0xdf, 0x40, 0xfb, 0x55, 0x9c, 0x46, 0x9f, 0xf2,
	0xda, 0xab, 0xdf, 0xa5, 0x2b, 0x8f, 0xb7, 0x87, 0x7e, 0x3d, 0x52, 0xf7, 0x23, 0xdf, 0x42, 0x77,
	0x31, 0xcd, 0xd1, 0x8c, 0x2c, 0x5f, 0xe2, 0xba, 0xe0, 0xee, 0xa1, 0xd9, 0x9e, 0xd7, 0xaf, 0x99,
	0xf9, 0x62, 0x66, 0xe2, 0x3b, 0x87, 0x7e, 0x3d, 0xdb, 0x9b, 0x99, 0x0e, 0xd7, 0x9a, 0x5e, 0x40,
	0x77, 0x31, 0xe9, 0x75, 0x96, 0x77, 0x97, 0xbb, 0xaf, 0x4c, 0xdd, 0x95, 0x92, 0xac, 0x18, 0x93,
	0xb7, 0xd0, 0x71, 0xd9, 0xbb, 0xed, 0xb5, 0xd4, 0x78, 0xeb, 0xc2, 0xdc, 0x47, 0xb7, 0x5d, 0xaf,
	0x5b, 0xba, 0xd9, 0x8e, 0x33, 0x41, 0x8e, 0xa0, 0x57, 0x65, 0x7e, 0x63, 0xc3, 0xe1, 0x5a, 0xc3,
	0x8e, 0xcb, 0xfa, 0x13, 0x76, 0x83, 0xa5, 0x41, 0x29, 0x53, 0x1e, 0xa0, 0x67, 0x9f, 0x2c, 0x79,
	0x92, 0x29, 0xec, 0xd7, 0x0c, 0xdf, 0x98, 0x6f, 0x92, 0x4b, 0x9e, 0xe2, 0xb6, 0xfb, 0xa7, 0xe6,
	0x1e, 0x9a, 0xdf, 0x27, 0xc3, 0xba, 0xf9, 0x71, 0xc0, 0x27, 0x42, 0x72, 0xdc, 0x45, 0xe4, 0x02,
	0x7a, 0xb5, 0xca, 0x8e, 0x66, 0x64, 0x65, 0x10, 0xd7, 0x15, 0xe3, 0x3e, 0x7a, 0x0f, 0xbc, 0x9d,
	0xba, 0xb7, 0xeb, 0x82, 0xef, 0xa1, 0x57, 0x0b, 0x7f, 0xad, 0x2b, 0x5d, 0x19, 0xf8, 0x32, 0x70,
	0x57, 0x69, 0xb2, 0x6a, 0x4e, 0xbe, 0x83, 0x9d, 0xa5, 0xab, 0xbb, 0x61, 0xc4, 0xc3, 0xb5, 0x11,
	0xbf, 0xa0, 0x30, 0xc8, 0xf2, 0xe0, 0x28, 0xfb, 0x20, 0x42, 0x7c, 0x34, 0x0a, 0xdc, 0x9f, 0x8d,
	0xa0, 0x89, 0xff, 0x0d, 0x9e, 0xfd, 0x1d, 0x00, 0x00, 0xff, 0xff, 0x5d, 0x2e, 0x55, 0xc2, 0x85,
	0x0c, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PayDatabaseServiceClient is the client API for PayDatabaseService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PayDatabaseServiceClient interface {
	SavePayOrder(ctx context.Context, in *PayOrder, opts ...grpc.CallOption) (*ReturnResult, error)
	UpdatePayOrder(ctx context.Context, in *PayOrder, opts ...grpc.CallOption) (*ReturnResult, error)
	FindPayOrder(ctx context.Context, in *PayOrder, opts ...grpc.CallOption) (*PayOrderResponse, error)
	SavePayOrderOk(ctx context.Context, in *PayOrderOk, opts ...grpc.CallOption) (*ReturnResult, error)
	UpdatePayOrderOk(ctx context.Context, in *PayOrderOk, opts ...grpc.CallOption) (*ReturnResult, error)
	FindPayOrderOk(ctx context.Context, in *PayOrderOk, opts ...grpc.CallOption) (*PayOrderOkResponse, error)
	SavePayNotify(ctx context.Context, in *PayNotify, opts ...grpc.CallOption) (*ReturnResult, error)
	UpdatePayNotify(ctx context.Context, in *PayNotify, opts ...grpc.CallOption) (*ReturnResult, error)
	FindPayNotify(ctx context.Context, in *PayNotify, opts ...grpc.CallOption) (*PayNotifyResponse, error)
	FindPayNotifyLessThenTime(ctx context.Context, in *PayNotify, opts ...grpc.CallOption) (*PayNotifyResponse, error)
	SavePayNotifyOk(ctx context.Context, in *PayNotifyOk, opts ...grpc.CallOption) (*ReturnResult, error)
	FindPayNotifyOk(ctx context.Context, in *PayNotifyOk, opts ...grpc.CallOption) (*PayNotifyOkResponse, error)
	UpdatePayNotifyOk(ctx context.Context, in *PayNotifyOk, opts ...grpc.CallOption) (*ReturnResult, error)
}

type payDatabaseServiceClient struct {
	cc *grpc.ClientConn
}

func NewPayDatabaseServiceClient(cc *grpc.ClientConn) PayDatabaseServiceClient {
	return &payDatabaseServiceClient{cc}
}

func (c *payDatabaseServiceClient) SavePayOrder(ctx context.Context, in *PayOrder, opts ...grpc.CallOption) (*ReturnResult, error) {
	out := new(ReturnResult)
	err := c.cc.Invoke(ctx, "/pay.PayDatabaseService/SavePayOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *payDatabaseServiceClient) UpdatePayOrder(ctx context.Context, in *PayOrder, opts ...grpc.CallOption) (*ReturnResult, error) {
	out := new(ReturnResult)
	err := c.cc.Invoke(ctx, "/pay.PayDatabaseService/UpdatePayOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *payDatabaseServiceClient) FindPayOrder(ctx context.Context, in *PayOrder, opts ...grpc.CallOption) (*PayOrderResponse, error) {
	out := new(PayOrderResponse)
	err := c.cc.Invoke(ctx, "/pay.PayDatabaseService/FindPayOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *payDatabaseServiceClient) SavePayOrderOk(ctx context.Context, in *PayOrderOk, opts ...grpc.CallOption) (*ReturnResult, error) {
	out := new(ReturnResult)
	err := c.cc.Invoke(ctx, "/pay.PayDatabaseService/SavePayOrderOk", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *payDatabaseServiceClient) UpdatePayOrderOk(ctx context.Context, in *PayOrderOk, opts ...grpc.CallOption) (*ReturnResult, error) {
	out := new(ReturnResult)
	err := c.cc.Invoke(ctx, "/pay.PayDatabaseService/UpdatePayOrderOk", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *payDatabaseServiceClient) FindPayOrderOk(ctx context.Context, in *PayOrderOk, opts ...grpc.CallOption) (*PayOrderOkResponse, error) {
	out := new(PayOrderOkResponse)
	err := c.cc.Invoke(ctx, "/pay.PayDatabaseService/FindPayOrderOk", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *payDatabaseServiceClient) SavePayNotify(ctx context.Context, in *PayNotify, opts ...grpc.CallOption) (*ReturnResult, error) {
	out := new(ReturnResult)
	err := c.cc.Invoke(ctx, "/pay.PayDatabaseService/SavePayNotify", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *payDatabaseServiceClient) UpdatePayNotify(ctx context.Context, in *PayNotify, opts ...grpc.CallOption) (*ReturnResult, error) {
	out := new(ReturnResult)
	err := c.cc.Invoke(ctx, "/pay.PayDatabaseService/UpdatePayNotify", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *payDatabaseServiceClient) FindPayNotify(ctx context.Context, in *PayNotify, opts ...grpc.CallOption) (*PayNotifyResponse, error) {
	out := new(PayNotifyResponse)
	err := c.cc.Invoke(ctx, "/pay.PayDatabaseService/FindPayNotify", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *payDatabaseServiceClient) FindPayNotifyLessThenTime(ctx context.Context, in *PayNotify, opts ...grpc.CallOption) (*PayNotifyResponse, error) {
	out := new(PayNotifyResponse)
	err := c.cc.Invoke(ctx, "/pay.PayDatabaseService/FindPayNotifyLessThenTime", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *payDatabaseServiceClient) SavePayNotifyOk(ctx context.Context, in *PayNotifyOk, opts ...grpc.CallOption) (*ReturnResult, error) {
	out := new(ReturnResult)
	err := c.cc.Invoke(ctx, "/pay.PayDatabaseService/SavePayNotifyOk", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *payDatabaseServiceClient) FindPayNotifyOk(ctx context.Context, in *PayNotifyOk, opts ...grpc.CallOption) (*PayNotifyOkResponse, error) {
	out := new(PayNotifyOkResponse)
	err := c.cc.Invoke(ctx, "/pay.PayDatabaseService/FindPayNotifyOk", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *payDatabaseServiceClient) UpdatePayNotifyOk(ctx context.Context, in *PayNotifyOk, opts ...grpc.CallOption) (*ReturnResult, error) {
	out := new(ReturnResult)
	err := c.cc.Invoke(ctx, "/pay.PayDatabaseService/UpdatePayNotifyOk", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PayDatabaseServiceServer is the server API for PayDatabaseService service.
type PayDatabaseServiceServer interface {
	SavePayOrder(context.Context, *PayOrder) (*ReturnResult, error)
	UpdatePayOrder(context.Context, *PayOrder) (*ReturnResult, error)
	FindPayOrder(context.Context, *PayOrder) (*PayOrderResponse, error)
	SavePayOrderOk(context.Context, *PayOrderOk) (*ReturnResult, error)
	UpdatePayOrderOk(context.Context, *PayOrderOk) (*ReturnResult, error)
	FindPayOrderOk(context.Context, *PayOrderOk) (*PayOrderOkResponse, error)
	SavePayNotify(context.Context, *PayNotify) (*ReturnResult, error)
	UpdatePayNotify(context.Context, *PayNotify) (*ReturnResult, error)
	FindPayNotify(context.Context, *PayNotify) (*PayNotifyResponse, error)
	FindPayNotifyLessThenTime(context.Context, *PayNotify) (*PayNotifyResponse, error)
	SavePayNotifyOk(context.Context, *PayNotifyOk) (*ReturnResult, error)
	FindPayNotifyOk(context.Context, *PayNotifyOk) (*PayNotifyOkResponse, error)
	UpdatePayNotifyOk(context.Context, *PayNotifyOk) (*ReturnResult, error)
}

// UnimplementedPayDatabaseServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPayDatabaseServiceServer struct {
}

func (*UnimplementedPayDatabaseServiceServer) SavePayOrder(ctx context.Context, req *PayOrder) (*ReturnResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SavePayOrder not implemented")
}
func (*UnimplementedPayDatabaseServiceServer) UpdatePayOrder(ctx context.Context, req *PayOrder) (*ReturnResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePayOrder not implemented")
}
func (*UnimplementedPayDatabaseServiceServer) FindPayOrder(ctx context.Context, req *PayOrder) (*PayOrderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindPayOrder not implemented")
}
func (*UnimplementedPayDatabaseServiceServer) SavePayOrderOk(ctx context.Context, req *PayOrderOk) (*ReturnResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SavePayOrderOk not implemented")
}
func (*UnimplementedPayDatabaseServiceServer) UpdatePayOrderOk(ctx context.Context, req *PayOrderOk) (*ReturnResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePayOrderOk not implemented")
}
func (*UnimplementedPayDatabaseServiceServer) FindPayOrderOk(ctx context.Context, req *PayOrderOk) (*PayOrderOkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindPayOrderOk not implemented")
}
func (*UnimplementedPayDatabaseServiceServer) SavePayNotify(ctx context.Context, req *PayNotify) (*ReturnResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SavePayNotify not implemented")
}
func (*UnimplementedPayDatabaseServiceServer) UpdatePayNotify(ctx context.Context, req *PayNotify) (*ReturnResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePayNotify not implemented")
}
func (*UnimplementedPayDatabaseServiceServer) FindPayNotify(ctx context.Context, req *PayNotify) (*PayNotifyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindPayNotify not implemented")
}
func (*UnimplementedPayDatabaseServiceServer) FindPayNotifyLessThenTime(ctx context.Context, req *PayNotify) (*PayNotifyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindPayNotifyLessThenTime not implemented")
}
func (*UnimplementedPayDatabaseServiceServer) SavePayNotifyOk(ctx context.Context, req *PayNotifyOk) (*ReturnResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SavePayNotifyOk not implemented")
}
func (*UnimplementedPayDatabaseServiceServer) FindPayNotifyOk(ctx context.Context, req *PayNotifyOk) (*PayNotifyOkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindPayNotifyOk not implemented")
}
func (*UnimplementedPayDatabaseServiceServer) UpdatePayNotifyOk(ctx context.Context, req *PayNotifyOk) (*ReturnResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePayNotifyOk not implemented")
}

func RegisterPayDatabaseServiceServer(s *grpc.Server, srv PayDatabaseServiceServer) {
	s.RegisterService(&_PayDatabaseService_serviceDesc, srv)
}

func _PayDatabaseService_SavePayOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PayOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PayDatabaseServiceServer).SavePayOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pay.PayDatabaseService/SavePayOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PayDatabaseServiceServer).SavePayOrder(ctx, req.(*PayOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _PayDatabaseService_UpdatePayOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PayOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PayDatabaseServiceServer).UpdatePayOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pay.PayDatabaseService/UpdatePayOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PayDatabaseServiceServer).UpdatePayOrder(ctx, req.(*PayOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _PayDatabaseService_FindPayOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PayOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PayDatabaseServiceServer).FindPayOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pay.PayDatabaseService/FindPayOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PayDatabaseServiceServer).FindPayOrder(ctx, req.(*PayOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _PayDatabaseService_SavePayOrderOk_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PayOrderOk)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PayDatabaseServiceServer).SavePayOrderOk(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pay.PayDatabaseService/SavePayOrderOk",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PayDatabaseServiceServer).SavePayOrderOk(ctx, req.(*PayOrderOk))
	}
	return interceptor(ctx, in, info, handler)
}

func _PayDatabaseService_UpdatePayOrderOk_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PayOrderOk)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PayDatabaseServiceServer).UpdatePayOrderOk(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pay.PayDatabaseService/UpdatePayOrderOk",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PayDatabaseServiceServer).UpdatePayOrderOk(ctx, req.(*PayOrderOk))
	}
	return interceptor(ctx, in, info, handler)
}

func _PayDatabaseService_FindPayOrderOk_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PayOrderOk)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PayDatabaseServiceServer).FindPayOrderOk(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pay.PayDatabaseService/FindPayOrderOk",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PayDatabaseServiceServer).FindPayOrderOk(ctx, req.(*PayOrderOk))
	}
	return interceptor(ctx, in, info, handler)
}

func _PayDatabaseService_SavePayNotify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PayNotify)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PayDatabaseServiceServer).SavePayNotify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pay.PayDatabaseService/SavePayNotify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PayDatabaseServiceServer).SavePayNotify(ctx, req.(*PayNotify))
	}
	return interceptor(ctx, in, info, handler)
}

func _PayDatabaseService_UpdatePayNotify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PayNotify)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PayDatabaseServiceServer).UpdatePayNotify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pay.PayDatabaseService/UpdatePayNotify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PayDatabaseServiceServer).UpdatePayNotify(ctx, req.(*PayNotify))
	}
	return interceptor(ctx, in, info, handler)
}

func _PayDatabaseService_FindPayNotify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PayNotify)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PayDatabaseServiceServer).FindPayNotify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pay.PayDatabaseService/FindPayNotify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PayDatabaseServiceServer).FindPayNotify(ctx, req.(*PayNotify))
	}
	return interceptor(ctx, in, info, handler)
}

func _PayDatabaseService_FindPayNotifyLessThenTime_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PayNotify)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PayDatabaseServiceServer).FindPayNotifyLessThenTime(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pay.PayDatabaseService/FindPayNotifyLessThenTime",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PayDatabaseServiceServer).FindPayNotifyLessThenTime(ctx, req.(*PayNotify))
	}
	return interceptor(ctx, in, info, handler)
}

func _PayDatabaseService_SavePayNotifyOk_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PayNotifyOk)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PayDatabaseServiceServer).SavePayNotifyOk(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pay.PayDatabaseService/SavePayNotifyOk",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PayDatabaseServiceServer).SavePayNotifyOk(ctx, req.(*PayNotifyOk))
	}
	return interceptor(ctx, in, info, handler)
}

func _PayDatabaseService_FindPayNotifyOk_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PayNotifyOk)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PayDatabaseServiceServer).FindPayNotifyOk(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pay.PayDatabaseService/FindPayNotifyOk",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PayDatabaseServiceServer).FindPayNotifyOk(ctx, req.(*PayNotifyOk))
	}
	return interceptor(ctx, in, info, handler)
}

func _PayDatabaseService_UpdatePayNotifyOk_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PayNotifyOk)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PayDatabaseServiceServer).UpdatePayNotifyOk(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pay.PayDatabaseService/UpdatePayNotifyOk",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PayDatabaseServiceServer).UpdatePayNotifyOk(ctx, req.(*PayNotifyOk))
	}
	return interceptor(ctx, in, info, handler)
}

var _PayDatabaseService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pay.PayDatabaseService",
	HandlerType: (*PayDatabaseServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SavePayOrder",
			Handler:    _PayDatabaseService_SavePayOrder_Handler,
		},
		{
			MethodName: "UpdatePayOrder",
			Handler:    _PayDatabaseService_UpdatePayOrder_Handler,
		},
		{
			MethodName: "FindPayOrder",
			Handler:    _PayDatabaseService_FindPayOrder_Handler,
		},
		{
			MethodName: "SavePayOrderOk",
			Handler:    _PayDatabaseService_SavePayOrderOk_Handler,
		},
		{
			MethodName: "UpdatePayOrderOk",
			Handler:    _PayDatabaseService_UpdatePayOrderOk_Handler,
		},
		{
			MethodName: "FindPayOrderOk",
			Handler:    _PayDatabaseService_FindPayOrderOk_Handler,
		},
		{
			MethodName: "SavePayNotify",
			Handler:    _PayDatabaseService_SavePayNotify_Handler,
		},
		{
			MethodName: "UpdatePayNotify",
			Handler:    _PayDatabaseService_UpdatePayNotify_Handler,
		},
		{
			MethodName: "FindPayNotify",
			Handler:    _PayDatabaseService_FindPayNotify_Handler,
		},
		{
			MethodName: "FindPayNotifyLessThenTime",
			Handler:    _PayDatabaseService_FindPayNotifyLessThenTime_Handler,
		},
		{
			MethodName: "SavePayNotifyOk",
			Handler:    _PayDatabaseService_SavePayNotifyOk_Handler,
		},
		{
			MethodName: "FindPayNotifyOk",
			Handler:    _PayDatabaseService_FindPayNotifyOk_Handler,
		},
		{
			MethodName: "UpdatePayNotifyOk",
			Handler:    _PayDatabaseService_UpdatePayNotifyOk_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pay_db_service.proto",
}
