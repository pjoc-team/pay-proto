// Code generated by protoc-gen-go. DO NOT EDIT.
// source: callback.proto

package pay

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	httpbody "google.golang.org/genproto/googleapis/api/httpbody"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type HttpCallbackRequest struct {
	Channel              string             `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	Account              string             `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	OrderId              string             `protobuf:"bytes,3,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	HttpMethod           string             `protobuf:"bytes,4,opt,name=http_method,json=httpMethod,proto3" json:"http_method,omitempty"`
	Body                 *httpbody.HttpBody `protobuf:"bytes,5,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *HttpCallbackRequest) Reset()         { *m = HttpCallbackRequest{} }
func (m *HttpCallbackRequest) String() string { return proto.CompactTextString(m) }
func (*HttpCallbackRequest) ProtoMessage()    {}
func (*HttpCallbackRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6cf7fe261a3a1c45, []int{0}
}

func (m *HttpCallbackRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HttpCallbackRequest.Unmarshal(m, b)
}
func (m *HttpCallbackRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HttpCallbackRequest.Marshal(b, m, deterministic)
}
func (m *HttpCallbackRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HttpCallbackRequest.Merge(m, src)
}
func (m *HttpCallbackRequest) XXX_Size() int {
	return xxx_messageInfo_HttpCallbackRequest.Size(m)
}
func (m *HttpCallbackRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HttpCallbackRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HttpCallbackRequest proto.InternalMessageInfo

func (m *HttpCallbackRequest) GetChannel() string {
	if m != nil {
		return m.Channel
	}
	return ""
}

func (m *HttpCallbackRequest) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *HttpCallbackRequest) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *HttpCallbackRequest) GetHttpMethod() string {
	if m != nil {
		return m.HttpMethod
	}
	return ""
}

func (m *HttpCallbackRequest) GetBody() *httpbody.HttpBody {
	if m != nil {
		return m.Body
	}
	return nil
}

type HttpCallbackResponse struct {
	Body                 []byte            `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	Header               map[string]string `protobuf:"bytes,2,rep,name=header,proto3" json:"header,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *HttpCallbackResponse) Reset()         { *m = HttpCallbackResponse{} }
func (m *HttpCallbackResponse) String() string { return proto.CompactTextString(m) }
func (*HttpCallbackResponse) ProtoMessage()    {}
func (*HttpCallbackResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6cf7fe261a3a1c45, []int{1}
}

func (m *HttpCallbackResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HttpCallbackResponse.Unmarshal(m, b)
}
func (m *HttpCallbackResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HttpCallbackResponse.Marshal(b, m, deterministic)
}
func (m *HttpCallbackResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HttpCallbackResponse.Merge(m, src)
}
func (m *HttpCallbackResponse) XXX_Size() int {
	return xxx_messageInfo_HttpCallbackResponse.Size(m)
}
func (m *HttpCallbackResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HttpCallbackResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HttpCallbackResponse proto.InternalMessageInfo

func (m *HttpCallbackResponse) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *HttpCallbackResponse) GetHeader() map[string]string {
	if m != nil {
		return m.Header
	}
	return nil
}

func init() {
	proto.RegisterType((*HttpCallbackRequest)(nil), "pay.HttpCallbackRequest")
	proto.RegisterType((*HttpCallbackResponse)(nil), "pay.HttpCallbackResponse")
	proto.RegisterMapType((map[string]string)(nil), "pay.HttpCallbackResponse.HeaderEntry")
}

func init() { proto.RegisterFile("callback.proto", fileDescriptor_6cf7fe261a3a1c45) }

var fileDescriptor_6cf7fe261a3a1c45 = []byte{
	// 498 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x53, 0x41, 0x6f, 0xd3, 0x30,
	0x14, 0x96, 0xd3, 0x6e, 0x80, 0x3b, 0x06, 0x32, 0x15, 0xca, 0x2a, 0xa0, 0x55, 0xa4, 0xa1, 0x9e,
	0xe2, 0x52, 0x2e, 0x63, 0x12, 0x42, 0x74, 0x42, 0x8c, 0x03, 0x12, 0xea, 0xb1, 0x97, 0xc9, 0x49,
	0xbc, 0x25, 0x2c, 0xf1, 0x33, 0x89, 0x33, 0x29, 0xaa, 0x7a, 0x81, 0x9f, 0xc0, 0x9d, 0x13, 0x77,
	0xae, 0xbb, 0xf1, 0x1f, 0xe0, 0xc4, 0x9d, 0x1f, 0x82, 0x62, 0x3b, 0x62, 0xa3, 0x55, 0x51, 0x6f,
	0xfe, 0xfc, 0x7d, 0xef, 0xf9, 0x7b, 0xdf, 0x4b, 0xf0, 0x6e, 0xc8, 0xd2, 0x34, 0x60, 0xe1, 0xb9,
	0x2f, 0x73, 0x50, 0x40, 0x5a, 0x92, 0x55, 0xbd, 0xbd, 0x33, 0x80, 0xb3, 0x94, 0x53, 0x26, 0x13,
	0x1a, 0x2b, 0x25, 0x03, 0x88, 0x2a, 0xc3, 0xf7, 0x1e, 0x5c, 0xa1, 0x98, 0x10, 0xa0, 0x98, 0x4a,
	0x40, 0x14, 0x96, 0xed, 0x5b, 0x56, 0xa3, 0xa0, 0x3c, 0xa5, 0x2a, 0xc9, 0x78, 0xa1, 0x58, 0x26,
	0xad, 0x60, 0x27, 0x84, 0x2c, 0x03, 0x61, 0x90, 0xf7, 0x0d, 0xe1, 0x7b, 0xc7, 0x4a, 0xc9, 0x23,
	0xeb, 0x61, 0xca, 0x3f, 0x94, 0xbc, 0x50, 0xc4, 0xc5, 0x37, 0xc2, 0x98, 0x09, 0xc1, 0x53, 0x17,
	0x0d, 0xd0, 0xf0, 0xd6, 0xb4, 0x81, 0x35, 0xc3, 0xc2, 0x10, 0x4a, 0xa1, 0x5c, 0xc7, 0x30, 0x16,
	0x92, 0x3d, 0x7c, 0x13, 0xf2, 0x88, 0xe7, 0x27, 0x49, 0xe4, 0xb6, 0x0c, 0xa5, 0xf1, 0x9b, 0x88,
	0xf4, 0x71, 0xa7, 0x9e, 0xe2, 0x24, 0xe3, 0x2a, 0x86, 0xc8, 0x6d, 0x6b, 0x16, 0xd7, 0x57, 0x6f,
	0xf5, 0x0d, 0x19, 0xe2, 0x76, 0x3d, 0xa2, 0xbb, 0x35, 0x40, 0xc3, 0xce, 0xb8, 0xeb, 0x9b, 0x29,
	0x7c, 0x26, 0x13, 0xbf, 0xb6, 0x37, 0x81, 0xa8, 0x9a, 0x6a, 0x85, 0xf7, 0x15, 0xe1, 0xee, 0x75,
	0xc7, 0x85, 0x04, 0x51, 0x70, 0x42, 0x6c, 0x8b, 0xda, 0xef, 0x8e, 0x11, 0x93, 0xe7, 0x78, 0x3b,
	0xe6, 0x2c, 0xe2, 0xb9, 0xeb, 0x0c, 0x5a, 0xc3, 0xce, 0x78, 0xdf, 0x97, 0xac, 0xf2, 0x57, 0x95,
	0xfb, 0xc7, 0x5a, 0xf7, 0x4a, 0xa8, 0xbc, 0x9a, 0xda, 0xa2, 0xde, 0x33, 0xdc, 0xb9, 0x72, 0x4d,
	0xee, 0xe2, 0xd6, 0x39, 0xaf, 0x6c, 0x20, 0xf5, 0x91, 0x74, 0xf1, 0xd6, 0x05, 0x4b, 0x4b, 0x6e,
	0xa3, 0x30, 0xe0, 0xd0, 0x39, 0x40, 0xe3, 0xcb, 0x36, 0xbe, 0x73, 0x64, 0x22, 0x6b, 0x9e, 0x22,
	0x9f, 0x1c, 0x7c, 0xbb, 0x01, 0x93, 0xea, 0x35, 0x57, 0xc4, 0x5d, 0xe1, 0x47, 0x2f, 0xa0, 0xb7,
	0x32, 0x02, 0xef, 0x3b, 0xfa, 0xf8, 0xf3, 0xf7, 0x67, 0xe7, 0x12, 0x91, 0x17, 0xf4, 0xe2, 0x09,
	0x15, 0xa0, 0x92, 0xd3, 0x8a, 0xda, 0xd5, 0xd0, 0xb9, 0x3d, 0x2c, 0xa8, 0x5d, 0x09, 0x9d, 0xdb,
	0xc3, 0x82, 0xea, 0x4d, 0xd0, 0x79, 0xb3, 0xa0, 0xc5, 0x6c, 0x40, 0x1e, 0xd5, 0x2d, 0x9a, 0x8f,
	0x6f, 0xb9, 0xc9, 0x6c, 0x4c, 0x46, 0xeb, 0x15, 0xcb, 0xcf, 0xcc, 0xfa, 0xe4, 0xe1, 0xb5, 0x9a,
	0x7f, 0x9f, 0x1d, 0x21, 0xf2, 0xc5, 0xc1, 0xbb, 0x7f, 0x53, 0x78, 0x07, 0xc5, 0xe6, 0x31, 0xfc,
	0x32, 0x31, 0xfc, 0x40, 0xde, 0xcb, 0x4d, 0x1d, 0x2e, 0x39, 0x3a, 0xd4, 0x5f, 0xca, 0xec, 0xb1,
	0xf7, 0x9f, 0x38, 0xac, 0xee, 0xc0, 0xdb, 0x38, 0x14, 0x5b, 0xb9, 0xef, 0xad, 0x8f, 0xc6, 0xc8,
	0x46, 0x68, 0x72, 0x1f, 0x77, 0x65, 0x19, 0xf8, 0xf2, 0x3d, 0x84, 0x3a, 0x17, 0xdb, 0x39, 0xd8,
	0xd6, 0xbf, 0xec, 0xd3, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x26, 0x4a, 0x4a, 0xc0, 0x31, 0x04,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ChannelCallbackClient is the client API for ChannelCallback service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChannelCallbackClient interface {
	CallbackByGet(ctx context.Context, in *HttpCallbackRequest, opts ...grpc.CallOption) (ChannelCallback_CallbackByGetClient, error)
	CallbackByPost(ctx context.Context, in *HttpCallbackRequest, opts ...grpc.CallOption) (ChannelCallback_CallbackByPostClient, error)
}

type channelCallbackClient struct {
	cc *grpc.ClientConn
}

func NewChannelCallbackClient(cc *grpc.ClientConn) ChannelCallbackClient {
	return &channelCallbackClient{cc}
}

func (c *channelCallbackClient) CallbackByGet(ctx context.Context, in *HttpCallbackRequest, opts ...grpc.CallOption) (ChannelCallback_CallbackByGetClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ChannelCallback_serviceDesc.Streams[0], "/pay.ChannelCallback/CallbackByGet", opts...)
	if err != nil {
		return nil, err
	}
	x := &channelCallbackCallbackByGetClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ChannelCallback_CallbackByGetClient interface {
	Recv() (*httpbody.HttpBody, error)
	grpc.ClientStream
}

type channelCallbackCallbackByGetClient struct {
	grpc.ClientStream
}

func (x *channelCallbackCallbackByGetClient) Recv() (*httpbody.HttpBody, error) {
	m := new(httpbody.HttpBody)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *channelCallbackClient) CallbackByPost(ctx context.Context, in *HttpCallbackRequest, opts ...grpc.CallOption) (ChannelCallback_CallbackByPostClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ChannelCallback_serviceDesc.Streams[1], "/pay.ChannelCallback/CallbackByPost", opts...)
	if err != nil {
		return nil, err
	}
	x := &channelCallbackCallbackByPostClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ChannelCallback_CallbackByPostClient interface {
	Recv() (*httpbody.HttpBody, error)
	grpc.ClientStream
}

type channelCallbackCallbackByPostClient struct {
	grpc.ClientStream
}

func (x *channelCallbackCallbackByPostClient) Recv() (*httpbody.HttpBody, error) {
	m := new(httpbody.HttpBody)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ChannelCallbackServer is the server API for ChannelCallback service.
type ChannelCallbackServer interface {
	CallbackByGet(*HttpCallbackRequest, ChannelCallback_CallbackByGetServer) error
	CallbackByPost(*HttpCallbackRequest, ChannelCallback_CallbackByPostServer) error
}

// UnimplementedChannelCallbackServer can be embedded to have forward compatible implementations.
type UnimplementedChannelCallbackServer struct {
}

func (*UnimplementedChannelCallbackServer) CallbackByGet(req *HttpCallbackRequest, srv ChannelCallback_CallbackByGetServer) error {
	return status.Errorf(codes.Unimplemented, "method CallbackByGet not implemented")
}
func (*UnimplementedChannelCallbackServer) CallbackByPost(req *HttpCallbackRequest, srv ChannelCallback_CallbackByPostServer) error {
	return status.Errorf(codes.Unimplemented, "method CallbackByPost not implemented")
}

func RegisterChannelCallbackServer(s *grpc.Server, srv ChannelCallbackServer) {
	s.RegisterService(&_ChannelCallback_serviceDesc, srv)
}

func _ChannelCallback_CallbackByGet_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(HttpCallbackRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ChannelCallbackServer).CallbackByGet(m, &channelCallbackCallbackByGetServer{stream})
}

type ChannelCallback_CallbackByGetServer interface {
	Send(*httpbody.HttpBody) error
	grpc.ServerStream
}

type channelCallbackCallbackByGetServer struct {
	grpc.ServerStream
}

func (x *channelCallbackCallbackByGetServer) Send(m *httpbody.HttpBody) error {
	return x.ServerStream.SendMsg(m)
}

func _ChannelCallback_CallbackByPost_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(HttpCallbackRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ChannelCallbackServer).CallbackByPost(m, &channelCallbackCallbackByPostServer{stream})
}

type ChannelCallback_CallbackByPostServer interface {
	Send(*httpbody.HttpBody) error
	grpc.ServerStream
}

type channelCallbackCallbackByPostServer struct {
	grpc.ServerStream
}

func (x *channelCallbackCallbackByPostServer) Send(m *httpbody.HttpBody) error {
	return x.ServerStream.SendMsg(m)
}

var _ChannelCallback_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pay.ChannelCallback",
	HandlerType: (*ChannelCallbackServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "CallbackByGet",
			Handler:       _ChannelCallback_CallbackByGet_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "CallbackByPost",
			Handler:       _ChannelCallback_CallbackByPost_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "callback.proto",
}
