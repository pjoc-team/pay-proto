// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pay_channel.proto

package pay

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type HTTPRequest_HttpMehod int32

const (
	HTTPRequest_GET  HTTPRequest_HttpMehod = 0
	HTTPRequest_POST HTTPRequest_HttpMehod = 1
)

var HTTPRequest_HttpMehod_name = map[int32]string{
	0: "GET",
	1: "POST",
}

var HTTPRequest_HttpMehod_value = map[string]int32{
	"GET":  0,
	"POST": 1,
}

func (x HTTPRequest_HttpMehod) String() string {
	return proto.EnumName(HTTPRequest_HttpMehod_name, int32(x))
}

func (HTTPRequest_HttpMehod) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cdcd4066e7aa4e78, []int{4, 0}
}

type ChannelPayRequest struct {
	GatewayOrderId       string            `protobuf:"bytes,1,opt,name=gateway_order_id,json=gatewayOrderId,proto3" json:"gateway_order_id,omitempty"`
	ChannelAccount       string            `protobuf:"bytes,2,opt,name=channel_account,json=channelAccount,proto3" json:"channel_account,omitempty"`
	PayAmount            uint32            `protobuf:"varint,3,opt,name=pay_amount,json=payAmount,proto3" json:"pay_amount,omitempty"`
	Product              *Product          `protobuf:"bytes,4,opt,name=product,proto3" json:"product,omitempty"`
	NotifyUrl            string            `protobuf:"bytes,5,opt,name=notify_url,json=notifyUrl,proto3" json:"notify_url,omitempty"`
	ReturnUrl            string            `protobuf:"bytes,6,opt,name=return_url,json=returnUrl,proto3" json:"return_url,omitempty"`
	UserIp               string            `protobuf:"bytes,7,opt,name=user_ip,json=userIp,proto3" json:"user_ip,omitempty"`
	Method               string            `protobuf:"bytes,98,opt,name=method,proto3" json:"method,omitempty"`
	Meta                 map[string]string `protobuf:"bytes,99,rep,name=meta,proto3" json:"meta,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ChannelPayRequest) Reset()         { *m = ChannelPayRequest{} }
func (m *ChannelPayRequest) String() string { return proto.CompactTextString(m) }
func (*ChannelPayRequest) ProtoMessage()    {}
func (*ChannelPayRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cdcd4066e7aa4e78, []int{0}
}

func (m *ChannelPayRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelPayRequest.Unmarshal(m, b)
}
func (m *ChannelPayRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelPayRequest.Marshal(b, m, deterministic)
}
func (m *ChannelPayRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelPayRequest.Merge(m, src)
}
func (m *ChannelPayRequest) XXX_Size() int {
	return xxx_messageInfo_ChannelPayRequest.Size(m)
}
func (m *ChannelPayRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelPayRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelPayRequest proto.InternalMessageInfo

func (m *ChannelPayRequest) GetGatewayOrderId() string {
	if m != nil {
		return m.GatewayOrderId
	}
	return ""
}

func (m *ChannelPayRequest) GetChannelAccount() string {
	if m != nil {
		return m.ChannelAccount
	}
	return ""
}

func (m *ChannelPayRequest) GetPayAmount() uint32 {
	if m != nil {
		return m.PayAmount
	}
	return 0
}

func (m *ChannelPayRequest) GetProduct() *Product {
	if m != nil {
		return m.Product
	}
	return nil
}

func (m *ChannelPayRequest) GetNotifyUrl() string {
	if m != nil {
		return m.NotifyUrl
	}
	return ""
}

func (m *ChannelPayRequest) GetReturnUrl() string {
	if m != nil {
		return m.ReturnUrl
	}
	return ""
}

func (m *ChannelPayRequest) GetUserIp() string {
	if m != nil {
		return m.UserIp
	}
	return ""
}

func (m *ChannelPayRequest) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *ChannelPayRequest) GetMeta() map[string]string {
	if m != nil {
		return m.Meta
	}
	return nil
}

type ChannelPayResponse struct {
	ChannelOrderId       string            `protobuf:"bytes,4,opt,name=channel_order_id,json=channelOrderId,proto3" json:"channel_order_id,omitempty"`
	Data                 map[string]string `protobuf:"bytes,5,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ChannelPayResponse) Reset()         { *m = ChannelPayResponse{} }
func (m *ChannelPayResponse) String() string { return proto.CompactTextString(m) }
func (*ChannelPayResponse) ProtoMessage()    {}
func (*ChannelPayResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cdcd4066e7aa4e78, []int{1}
}

func (m *ChannelPayResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelPayResponse.Unmarshal(m, b)
}
func (m *ChannelPayResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelPayResponse.Marshal(b, m, deterministic)
}
func (m *ChannelPayResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelPayResponse.Merge(m, src)
}
func (m *ChannelPayResponse) XXX_Size() int {
	return xxx_messageInfo_ChannelPayResponse.Size(m)
}
func (m *ChannelPayResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelPayResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelPayResponse proto.InternalMessageInfo

func (m *ChannelPayResponse) GetChannelOrderId() string {
	if m != nil {
		return m.ChannelOrderId
	}
	return ""
}

func (m *ChannelPayResponse) GetData() map[string]string {
	if m != nil {
		return m.Data
	}
	return nil
}

//来自第三方的请求的Notify
type NotifyRequest struct {
	//支付账户（可选）, 允许用户配置多个支付宝账户, 如果为空，则默认选择第一个配置文件
	PaymentAccount string `protobuf:"bytes,1,opt,name=payment_account,json=paymentAccount,proto3" json:"payment_account,omitempty"`
	//支付类型：  pay（付款相关通知）,sign_pay（签约）, 根据具体通知配置而定。
	Type PayType `protobuf:"varint,2,opt,name=type,proto3,enum=pay.PayType" json:"type,omitempty"`
	//请求的HTTP详情
	Request *HTTPRequest `protobuf:"bytes,3,opt,name=request,proto3" json:"request,omitempty"`
	//可选，支付方式， 可用于统一网关层
	Method               string   `protobuf:"bytes,99,opt,name=method,proto3" json:"method,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NotifyRequest) Reset()         { *m = NotifyRequest{} }
func (m *NotifyRequest) String() string { return proto.CompactTextString(m) }
func (*NotifyRequest) ProtoMessage()    {}
func (*NotifyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cdcd4066e7aa4e78, []int{2}
}

func (m *NotifyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NotifyRequest.Unmarshal(m, b)
}
func (m *NotifyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NotifyRequest.Marshal(b, m, deterministic)
}
func (m *NotifyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NotifyRequest.Merge(m, src)
}
func (m *NotifyRequest) XXX_Size() int {
	return xxx_messageInfo_NotifyRequest.Size(m)
}
func (m *NotifyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NotifyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NotifyRequest proto.InternalMessageInfo

func (m *NotifyRequest) GetPaymentAccount() string {
	if m != nil {
		return m.PaymentAccount
	}
	return ""
}

func (m *NotifyRequest) GetType() PayType {
	if m != nil {
		return m.Type
	}
	return PayType_PAY
}

func (m *NotifyRequest) GetRequest() *HTTPRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *NotifyRequest) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

//来自第三方的请求的Notify
type NotifyResponse struct {
	//付款状态
	Status PayStatus `protobuf:"varint,1,opt,name=status,proto3,enum=pay.PayStatus" json:"status,omitempty"`
	//同步返回的数据
	Response             *HTTPResponse `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *NotifyResponse) Reset()         { *m = NotifyResponse{} }
func (m *NotifyResponse) String() string { return proto.CompactTextString(m) }
func (*NotifyResponse) ProtoMessage()    {}
func (*NotifyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cdcd4066e7aa4e78, []int{3}
}

func (m *NotifyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NotifyResponse.Unmarshal(m, b)
}
func (m *NotifyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NotifyResponse.Marshal(b, m, deterministic)
}
func (m *NotifyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NotifyResponse.Merge(m, src)
}
func (m *NotifyResponse) XXX_Size() int {
	return xxx_messageInfo_NotifyResponse.Size(m)
}
func (m *NotifyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NotifyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NotifyResponse proto.InternalMessageInfo

func (m *NotifyResponse) GetStatus() PayStatus {
	if m != nil {
		return m.Status
	}
	return PayStatus_SUCCESS
}

func (m *NotifyResponse) GetResponse() *HTTPResponse {
	if m != nil {
		return m.Response
	}
	return nil
}

//来自第三方的请求body
type HTTPRequest struct {
	//请求方法： GET or POST
	Method HTTPRequest_HttpMehod `protobuf:"varint,1,opt,name=method,proto3,enum=pay.HTTPRequest_HttpMehod" json:"method,omitempty"`
	//其他附加信息，可选返回商户返回的meta信息
	Header map[string]string `protobuf:"bytes,2,rep,name=header,proto3" json:"header,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	//请求的第三方的url，包含 /some?a=b&c=d, 也可以简化为：?a=b&c=d,不填写具体URL PATH
	Url string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	//请求二进制，可能是：xml或json
	Body                 []byte   `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HTTPRequest) Reset()         { *m = HTTPRequest{} }
func (m *HTTPRequest) String() string { return proto.CompactTextString(m) }
func (*HTTPRequest) ProtoMessage()    {}
func (*HTTPRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cdcd4066e7aa4e78, []int{4}
}

func (m *HTTPRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HTTPRequest.Unmarshal(m, b)
}
func (m *HTTPRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HTTPRequest.Marshal(b, m, deterministic)
}
func (m *HTTPRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HTTPRequest.Merge(m, src)
}
func (m *HTTPRequest) XXX_Size() int {
	return xxx_messageInfo_HTTPRequest.Size(m)
}
func (m *HTTPRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HTTPRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HTTPRequest proto.InternalMessageInfo

func (m *HTTPRequest) GetMethod() HTTPRequest_HttpMehod {
	if m != nil {
		return m.Method
	}
	return HTTPRequest_GET
}

func (m *HTTPRequest) GetHeader() map[string]string {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *HTTPRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *HTTPRequest) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

//向第三方响应的Response
type HTTPResponse struct {
	//其他附加信息，可选返回商户返回的meta信息
	Header map[string]string `protobuf:"bytes,1,rep,name=header,proto3" json:"header,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	//请求二进制，可能是：xml或json
	Body []byte `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	//请求响应状态码，默认200
	Status               int32    `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HTTPResponse) Reset()         { *m = HTTPResponse{} }
func (m *HTTPResponse) String() string { return proto.CompactTextString(m) }
func (*HTTPResponse) ProtoMessage()    {}
func (*HTTPResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cdcd4066e7aa4e78, []int{5}
}

func (m *HTTPResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HTTPResponse.Unmarshal(m, b)
}
func (m *HTTPResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HTTPResponse.Marshal(b, m, deterministic)
}
func (m *HTTPResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HTTPResponse.Merge(m, src)
}
func (m *HTTPResponse) XXX_Size() int {
	return xxx_messageInfo_HTTPResponse.Size(m)
}
func (m *HTTPResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HTTPResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HTTPResponse proto.InternalMessageInfo

func (m *HTTPResponse) GetHeader() map[string]string {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *HTTPResponse) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *HTTPResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func init() {
	proto.RegisterEnum("pay.HTTPRequest_HttpMehod", HTTPRequest_HttpMehod_name, HTTPRequest_HttpMehod_value)
	proto.RegisterType((*ChannelPayRequest)(nil), "pay.ChannelPayRequest")
	proto.RegisterMapType((map[string]string)(nil), "pay.ChannelPayRequest.MetaEntry")
	proto.RegisterType((*ChannelPayResponse)(nil), "pay.ChannelPayResponse")
	proto.RegisterMapType((map[string]string)(nil), "pay.ChannelPayResponse.DataEntry")
	proto.RegisterType((*NotifyRequest)(nil), "pay.NotifyRequest")
	proto.RegisterType((*NotifyResponse)(nil), "pay.NotifyResponse")
	proto.RegisterType((*HTTPRequest)(nil), "pay.HTTPRequest")
	proto.RegisterMapType((map[string]string)(nil), "pay.HTTPRequest.HeaderEntry")
	proto.RegisterType((*HTTPResponse)(nil), "pay.HTTPResponse")
	proto.RegisterMapType((map[string]string)(nil), "pay.HTTPResponse.HeaderEntry")
}

func init() { proto.RegisterFile("pay_channel.proto", fileDescriptor_cdcd4066e7aa4e78) }

var fileDescriptor_cdcd4066e7aa4e78 = []byte{
	// 750 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0xcd, 0x6e, 0xdb, 0x46,
	0x10, 0x2e, 0xf5, 0x6b, 0x8d, 0x64, 0x59, 0xde, 0xba, 0x36, 0xa1, 0xda, 0xad, 0xcc, 0x83, 0x2d,
	0x18, 0xa8, 0x84, 0xaa, 0x35, 0xda, 0xfa, 0xe6, 0xb6, 0x46, 0xed, 0x83, 0x6b, 0x81, 0x56, 0x2e,
	0xb9, 0x08, 0x2b, 0x72, 0x2d, 0x29, 0x11, 0xb9, 0x1b, 0x72, 0xe9, 0x60, 0x61, 0xe4, 0x92, 0x6b,
	0x8e, 0xb9, 0xe7, 0x09, 0x82, 0xbc, 0x41, 0x9e, 0x22, 0xaf, 0x90, 0x87, 0xc8, 0x31, 0xd8, 0x1f,
	0x32, 0xb4, 0xe5, 0x1c, 0x8c, 0xdc, 0xb8, 0xdf, 0x37, 0x3b, 0xf3, 0xcd, 0x7c, 0xb3, 0x84, 0x75,
	0x86, 0xc5, 0xd8, 0x9b, 0xe1, 0x30, 0x24, 0x8b, 0x1e, 0x8b, 0x28, 0xa7, 0xa8, 0xc8, 0xb0, 0x68,
	0x6f, 0x4f, 0x29, 0x9d, 0x2e, 0x48, 0x1f, 0xb3, 0x79, 0x1f, 0x87, 0x21, 0xe5, 0x98, 0xcf, 0x69,
	0x18, 0xeb, 0x90, 0xf6, 0xcf, 0x86, 0x55, 0xa7, 0x49, 0x72, 0xd5, 0xe7, 0xf3, 0x80, 0xc4, 0x1c,
	0x07, 0xcc, 0x04, 0x34, 0x3c, 0x1a, 0x04, 0x34, 0xd4, 0x27, 0xe7, 0x55, 0x11, 0xd6, 0xff, 0xd1,
	0x35, 0x86, 0x58, 0xb8, 0xe4, 0x59, 0x42, 0x62, 0x8e, 0xba, 0xd0, 0x9a, 0x62, 0x4e, 0x9e, 0x63,
	0x31, 0xa6, 0x91, 0x4f, 0xa2, 0xf1, 0xdc, 0xb7, 0xad, 0x8e, 0xd5, 0xad, 0xb9, 0x4d, 0x83, 0x5f,
	0x48, 0xf8, 0xcc, 0x47, 0xfb, 0xb0, 0x66, 0x24, 0x8e, 0xb1, 0xe7, 0xd1, 0x24, 0xe4, 0x76, 0x41,
	0x07, 0x1a, 0xf8, 0x58, 0xa3, 0x68, 0x07, 0x40, 0xf6, 0x83, 0x03, 0x15, 0x53, 0xec, 0x58, 0xdd,
	0x55, 0xb7, 0xc6, 0xb0, 0x38, 0x56, 0x00, 0xda, 0x83, 0x2a, 0x8b, 0xa8, 0x9f, 0x78, 0xdc, 0x2e,
	0x75, 0xac, 0x6e, 0x7d, 0xd0, 0xe8, 0x31, 0x2c, 0x7a, 0x43, 0x8d, 0xb9, 0x29, 0x29, 0xd3, 0x84,
	0x94, 0xcf, 0xaf, 0xc4, 0x38, 0x89, 0x16, 0x76, 0x59, 0x95, 0xaa, 0x69, 0xe4, 0x51, 0xb4, 0x90,
	0x74, 0x44, 0x78, 0x12, 0x85, 0x8a, 0xae, 0x68, 0x5a, 0x23, 0x92, 0xde, 0x82, 0x6a, 0x12, 0xcb,
	0x76, 0x98, 0x5d, 0x55, 0x5c, 0x45, 0x1e, 0xcf, 0x18, 0xda, 0x84, 0x4a, 0x40, 0xf8, 0x8c, 0xfa,
	0xf6, 0x44, 0xe3, 0xfa, 0x84, 0x7e, 0x87, 0x52, 0x40, 0x38, 0xb6, 0xbd, 0x4e, 0xb1, 0x5b, 0x1f,
	0x74, 0x94, 0xa6, 0xa5, 0x71, 0xf5, 0xce, 0x09, 0xc7, 0x27, 0x21, 0x8f, 0x84, 0xab, 0xa2, 0xdb,
	0x7f, 0x40, 0x2d, 0x83, 0x50, 0x0b, 0x8a, 0x4f, 0x89, 0x30, 0xe3, 0x93, 0x9f, 0x68, 0x03, 0xca,
	0xd7, 0x78, 0x91, 0x10, 0x33, 0x29, 0x7d, 0x38, 0x2a, 0xfc, 0x69, 0x39, 0xef, 0x2c, 0x40, 0xf9,
	0xf4, 0x31, 0xa3, 0x61, 0x4c, 0xa4, 0x1d, 0xe9, 0x90, 0x33, 0x3b, 0x4a, 0xb7, 0xa6, 0x9c, 0xda,
	0x71, 0x08, 0x25, 0x1f, 0x73, 0x6c, 0x97, 0x95, 0xde, 0xdd, 0x25, 0xbd, 0x3a, 0x61, 0xef, 0x5f,
	0x9c, 0x09, 0x96, 0xe1, 0x52, 0x70, 0x06, 0x3d, 0x48, 0xf0, 0x1b, 0x0b, 0x56, 0xff, 0x57, 0xd3,
	0x4f, 0x57, 0x67, 0x1f, 0xd6, 0x18, 0x16, 0x01, 0x09, 0x79, 0xb6, 0x10, 0x66, 0x73, 0x0c, 0x9c,
	0x2e, 0x44, 0x07, 0x4a, 0x5c, 0x30, 0x9d, 0xb3, 0x99, 0xda, 0x8d, 0xc5, 0x48, 0x30, 0xe2, 0x2a,
	0x06, 0x1d, 0x40, 0x35, 0xd2, 0x59, 0xd5, 0xbe, 0xd4, 0x07, 0x2d, 0x15, 0x74, 0x3a, 0x1a, 0x0d,
	0x4d, 0x35, 0x37, 0x0d, 0xc8, 0x19, 0xe8, 0xe5, 0x0d, 0x74, 0xa6, 0xd0, 0x4c, 0xf5, 0x99, 0x61,
	0xee, 0x41, 0x25, 0xe6, 0x98, 0x27, 0xb1, 0xd2, 0xd5, 0x1c, 0x34, 0xd3, 0xca, 0x97, 0x0a, 0x75,
	0x0d, 0x8b, 0x7e, 0x81, 0x95, 0xc8, 0xdc, 0x51, 0x1a, 0xeb, 0x83, 0xf5, 0x5c, 0x79, 0x4d, 0xb8,
	0x59, 0x88, 0xf3, 0xc9, 0x82, 0x7a, 0x4e, 0x19, 0x1a, 0x64, 0x82, 0x74, 0x99, 0xf6, 0x5d, 0xed,
	0xbd, 0x53, 0xce, 0xd9, 0x39, 0x99, 0x51, 0x3f, 0xb7, 0x6d, 0x95, 0x19, 0xc1, 0x3e, 0x89, 0xec,
	0x82, 0xf2, 0x6f, 0x7b, 0xf9, 0x8e, 0xa2, 0xb5, 0x75, 0x26, 0x56, 0xfa, 0x25, 0x97, 0xbd, 0xa8,
	0xfd, 0x4a, 0xa2, 0x05, 0x42, 0x50, 0x9a, 0x50, 0x5f, 0xa8, 0x1d, 0x69, 0xb8, 0xea, 0xbb, 0xfd,
	0x17, 0xd4, 0x73, 0x97, 0x1f, 0x64, 0xf2, 0x4f, 0x50, 0xcb, 0xb4, 0xa2, 0x2a, 0x14, 0xff, 0x3b,
	0x19, 0xb5, 0xbe, 0x43, 0x2b, 0x50, 0x1a, 0x5e, 0x5c, 0x8e, 0x5a, 0x96, 0xf3, 0xd6, 0x82, 0x46,
	0x7e, 0x2a, 0xe8, 0x30, 0xeb, 0xc3, 0x52, 0x7d, 0xec, 0x2c, 0x0d, 0xee, 0xde, 0x46, 0x52, 0xd9,
	0x85, 0x2f, 0xb2, 0xa5, 0xaf, 0xc6, 0x2d, 0xd9, 0x5f, 0x39, 0x75, 0xe7, 0x1b, 0xda, 0x19, 0xbc,
	0xb7, 0x00, 0x86, 0x58, 0x98, 0x67, 0x81, 0x2e, 0x41, 0xfe, 0x55, 0xd1, 0xe6, 0xfd, 0x6f, 0xbb,
	0xbd, 0xf5, 0x95, 0x37, 0xe4, 0xfc, 0xf8, 0xf2, 0xc3, 0xc7, 0xd7, 0x85, 0x1f, 0x9c, 0x56, 0xff,
	0xfa, 0xd7, 0x3e, 0xc3, 0xa2, 0x7f, 0xa3, 0x5d, 0x7c, 0x71, 0x64, 0x1d, 0xa0, 0xc7, 0x50, 0xd1,
	0x3f, 0x25, 0x84, 0xd4, 0xfd, 0x5b, 0x6f, 0xa4, 0xfd, 0xfd, 0x2d, 0xcc, 0xe4, 0xdb, 0x57, 0xf9,
	0x76, 0x9d, 0x6d, 0x99, 0x4f, 0x5f, 0xee, 0xdf, 0xdc, 0x79, 0x4a, 0x32, 0xf7, 0xdf, 0x9b, 0xb0,
	0xc1, 0x92, 0x49, 0x8f, 0x3d, 0xa1, 0x9e, 0xca, 0x63, 0x7e, 0x01, 0x93, 0x8a, 0xfa, 0xa3, 0xff,
	0xf6, 0x39, 0x00, 0x00, 0xff, 0xff, 0xe1, 0x81, 0x99, 0x01, 0x38, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PayChannelClient is the client API for PayChannel service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PayChannelClient interface {
	Pay(ctx context.Context, in *ChannelPayRequest, opts ...grpc.CallOption) (*ChannelPayResponse, error)
	Notify(ctx context.Context, in *NotifyRequest, opts ...grpc.CallOption) (*NotifyResponse, error)
}

type payChannelClient struct {
	cc *grpc.ClientConn
}

func NewPayChannelClient(cc *grpc.ClientConn) PayChannelClient {
	return &payChannelClient{cc}
}

func (c *payChannelClient) Pay(ctx context.Context, in *ChannelPayRequest, opts ...grpc.CallOption) (*ChannelPayResponse, error) {
	out := new(ChannelPayResponse)
	err := c.cc.Invoke(ctx, "/pay.PayChannel/pay", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *payChannelClient) Notify(ctx context.Context, in *NotifyRequest, opts ...grpc.CallOption) (*NotifyResponse, error) {
	out := new(NotifyResponse)
	err := c.cc.Invoke(ctx, "/pay.PayChannel/notify", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PayChannelServer is the server API for PayChannel service.
type PayChannelServer interface {
	Pay(context.Context, *ChannelPayRequest) (*ChannelPayResponse, error)
	Notify(context.Context, *NotifyRequest) (*NotifyResponse, error)
}

// UnimplementedPayChannelServer can be embedded to have forward compatible implementations.
type UnimplementedPayChannelServer struct {
}

func (*UnimplementedPayChannelServer) Pay(ctx context.Context, req *ChannelPayRequest) (*ChannelPayResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Pay not implemented")
}
func (*UnimplementedPayChannelServer) Notify(ctx context.Context, req *NotifyRequest) (*NotifyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Notify not implemented")
}

func RegisterPayChannelServer(s *grpc.Server, srv PayChannelServer) {
	s.RegisterService(&_PayChannel_serviceDesc, srv)
}

func _PayChannel_Pay_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChannelPayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PayChannelServer).Pay(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pay.PayChannel/Pay",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PayChannelServer).Pay(ctx, req.(*ChannelPayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PayChannel_Notify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NotifyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PayChannelServer).Notify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pay.PayChannel/Notify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PayChannelServer).Notify(ctx, req.(*NotifyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PayChannel_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pay.PayChannel",
	HandlerType: (*PayChannelServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "pay",
			Handler:    _PayChannel_Pay_Handler,
		},
		{
			MethodName: "notify",
			Handler:    _PayChannel_Notify_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pay_channel.proto",
}
