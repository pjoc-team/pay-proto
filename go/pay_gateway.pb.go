// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pay_gateway.proto

package pay

import (
	context "context"
	fmt "fmt"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PayRequest struct {
	// 版本
	Version string `protobuf:"bytes,100,opt,name=version,proto3" json:"version,omitempty"`
	// 业务订单号
	OutTradeNo string `protobuf:"bytes,1,opt,name=out_trade_no,json=outTradeNo,proto3" json:"out_trade_no,omitempty"`
	// 支付金额（分）
	PayAmount uint64 `protobuf:"varint,3,opt,name=pay_amount,json=payAmount,proto3" json:"pay_amount,omitempty"`
	// 币种
	Currency string `protobuf:"bytes,20,opt,name=currency,proto3" json:"currency,omitempty"`
	// 接收通知的地址，不能带参数（即：不能包含问号）
	NotifyUrl string `protobuf:"bytes,4,opt,name=notify_url,json=notifyUrl,proto3" json:"notify_url,omitempty"`
	// 支付后跳转的前端地址
	ReturnUrl string `protobuf:"bytes,5,opt,name=return_url,json=returnUrl,proto3" json:"return_url,omitempty"`
	// 系统给商户分配的app_id
	AppId string `protobuf:"bytes,6,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	// 加密方法，RSA和MD5，默认RSA
	SignType string `protobuf:"bytes,7,opt,name=sign_type,json=signType,proto3" json:"sign_type,omitempty"`
	// 签名
	Sign string `protobuf:"bytes,14,opt,name=sign,proto3" json:"sign,omitempty"`
	// 业务方下单时间，时间格式: 年年年年-月月-日日 时时:分分:秒秒，例如: 2006-01-02 15:04:05
	OrderTime *timestamp.Timestamp `protobuf:"bytes,8,opt,name=order_time,json=orderTime,proto3" json:"order_time,omitempty"`
	// 发起支付的用户ip
	UserIp string `protobuf:"bytes,9,opt,name=user_ip,json=userIp,proto3" json:"user_ip,omitempty"`
	// 用户在业务系统的id
	UserId string `protobuf:"bytes,18,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 支付者账号，可选
	PayerAccount string `protobuf:"bytes,10,opt,name=payer_account,json=payerAccount,proto3" json:"payer_account,omitempty"`
	// 业务系统的产品id
	ProductId string `protobuf:"bytes,11,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	// 商品名称
	ProductName string `protobuf:"bytes,12,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`
	// 商品描述
	ProductDescribe string `protobuf:"bytes,13,opt,name=product_describe,json=productDescribe,proto3" json:"product_describe,omitempty"`
	// 参数编码，只允许utf-8编码；签名时一定要使用该编码获取字节然后再进行签名
	Charset string `protobuf:"bytes,15,opt,name=charset,proto3" json:"charset,omitempty"`
	// 回调业务系统时需要带上的字符串
	CallbackJson string `protobuf:"bytes,16,opt,name=callback_json,json=callbackJson,proto3" json:"callback_json,omitempty"`
	// 扩展json
	ExtJson string `protobuf:"bytes,17,opt,name=ext_json,json=extJson,proto3" json:"ext_json,omitempty"`
	// 渠道id（非必须），如果未指定method，系统会根据method来找到可用的channel_id
	ChannelId string `protobuf:"bytes,19,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	// 例如：二维码支付，银联支付等。
	Method               Method   `protobuf:"varint,98,opt,name=method,proto3,enum=pay.Method" json:"method,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PayRequest) Reset()         { *m = PayRequest{} }
func (m *PayRequest) String() string { return proto.CompactTextString(m) }
func (*PayRequest) ProtoMessage()    {}
func (*PayRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_15bb988e8569f4a8, []int{0}
}

func (m *PayRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PayRequest.Unmarshal(m, b)
}
func (m *PayRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PayRequest.Marshal(b, m, deterministic)
}
func (m *PayRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PayRequest.Merge(m, src)
}
func (m *PayRequest) XXX_Size() int {
	return xxx_messageInfo_PayRequest.Size(m)
}
func (m *PayRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PayRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PayRequest proto.InternalMessageInfo

func (m *PayRequest) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *PayRequest) GetOutTradeNo() string {
	if m != nil {
		return m.OutTradeNo
	}
	return ""
}

func (m *PayRequest) GetPayAmount() uint64 {
	if m != nil {
		return m.PayAmount
	}
	return 0
}

func (m *PayRequest) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *PayRequest) GetNotifyUrl() string {
	if m != nil {
		return m.NotifyUrl
	}
	return ""
}

func (m *PayRequest) GetReturnUrl() string {
	if m != nil {
		return m.ReturnUrl
	}
	return ""
}

func (m *PayRequest) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *PayRequest) GetSignType() string {
	if m != nil {
		return m.SignType
	}
	return ""
}

func (m *PayRequest) GetSign() string {
	if m != nil {
		return m.Sign
	}
	return ""
}

func (m *PayRequest) GetOrderTime() *timestamp.Timestamp {
	if m != nil {
		return m.OrderTime
	}
	return nil
}

func (m *PayRequest) GetUserIp() string {
	if m != nil {
		return m.UserIp
	}
	return ""
}

func (m *PayRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *PayRequest) GetPayerAccount() string {
	if m != nil {
		return m.PayerAccount
	}
	return ""
}

func (m *PayRequest) GetProductId() string {
	if m != nil {
		return m.ProductId
	}
	return ""
}

func (m *PayRequest) GetProductName() string {
	if m != nil {
		return m.ProductName
	}
	return ""
}

func (m *PayRequest) GetProductDescribe() string {
	if m != nil {
		return m.ProductDescribe
	}
	return ""
}

func (m *PayRequest) GetCharset() string {
	if m != nil {
		return m.Charset
	}
	return ""
}

func (m *PayRequest) GetCallbackJson() string {
	if m != nil {
		return m.CallbackJson
	}
	return ""
}

func (m *PayRequest) GetExtJson() string {
	if m != nil {
		return m.ExtJson
	}
	return ""
}

func (m *PayRequest) GetChannelId() string {
	if m != nil {
		return m.ChannelId
	}
	return ""
}

func (m *PayRequest) GetMethod() Method {
	if m != nil {
		return m.Method
	}
	return Method_WEB
}

type PayResponse struct {
	Result               *ReturnResult     `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	GatewayOrderId       string            `protobuf:"bytes,2,opt,name=gateway_order_id,json=gatewayOrderId,proto3" json:"gateway_order_id,omitempty"`
	Data                 map[string]string `protobuf:"bytes,5,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PayResponse) Reset()         { *m = PayResponse{} }
func (m *PayResponse) String() string { return proto.CompactTextString(m) }
func (*PayResponse) ProtoMessage()    {}
func (*PayResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_15bb988e8569f4a8, []int{1}
}

func (m *PayResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PayResponse.Unmarshal(m, b)
}
func (m *PayResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PayResponse.Marshal(b, m, deterministic)
}
func (m *PayResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PayResponse.Merge(m, src)
}
func (m *PayResponse) XXX_Size() int {
	return xxx_messageInfo_PayResponse.Size(m)
}
func (m *PayResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PayResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PayResponse proto.InternalMessageInfo

func (m *PayResponse) GetResult() *ReturnResult {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *PayResponse) GetGatewayOrderId() string {
	if m != nil {
		return m.GatewayOrderId
	}
	return ""
}

func (m *PayResponse) GetData() map[string]string {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*PayRequest)(nil), "pay.PayRequest")
	proto.RegisterType((*PayResponse)(nil), "pay.PayResponse")
	proto.RegisterMapType((map[string]string)(nil), "pay.PayResponse.DataEntry")
}

func init() { proto.RegisterFile("pay_gateway.proto", fileDescriptor_15bb988e8569f4a8) }

var fileDescriptor_15bb988e8569f4a8 = []byte{
	// 816 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x53, 0x4d, 0x6f, 0x1c, 0x35,
	0x18, 0xd6, 0x64, 0x3f, 0xb2, 0xfb, 0xee, 0x26, 0x99, 0x98, 0xd0, 0xba, 0x1b, 0x22, 0x96, 0x50,
	0xa4, 0x85, 0xb0, 0x33, 0xb0, 0x20, 0x01, 0x45, 0x48, 0xcd, 0xa8, 0x11, 0x5a, 0x24, 0x4a, 0x35,
	0x84, 0x0b, 0x84, 0x8e, 0xbc, 0x33, 0xee, 0x66, 0xda, 0x19, 0xdb, 0x78, 0x3c, 0xdb, 0x18, 0x84,
	0x84, 0xfa, 0x17, 0xe0, 0xc0, 0xef, 0xe0, 0x6f, 0x70, 0xe4, 0xca, 0x91, 0x1b, 0xff, 0x60, 0x4f,
	0xc8, 0xf6, 0x6c, 0x1b, 0xd1, 0x9b, 0xdf, 0xe7, 0x79, 0x5e, 0xfb, 0xf1, 0xfb, 0x01, 0xfb, 0x82,
	0xe8, 0x64, 0x49, 0x14, 0x7d, 0x4a, 0x74, 0x20, 0x24, 0x57, 0x1c, 0xb5, 0x04, 0xd1, 0xa3, 0xd7,
	0x96, 0x9c, 0x2f, 0x0b, 0x1a, 0x12, 0x91, 0x87, 0x84, 0x31, 0xae, 0x88, 0xca, 0x39, 0xab, 0x9c,
	0x64, 0xf4, 0x7a, 0xc3, 0xda, 0x68, 0x51, 0x3f, 0x0a, 0x55, 0x5e, 0xd2, 0x4a, 0x91, 0x52, 0x34,
	0x82, 0x61, 0xca, 0xcb, 0x92, 0xb3, 0x26, 0x3a, 0x5d, 0xe6, 0xea, 0xb2, 0x5e, 0x04, 0x29, 0x2f,
	0x43, 0xca, 0x56, 0x5c, 0x0b, 0xc9, 0xaf, 0xb4, 0xcb, 0x4e, 0xa7, 0x4b, 0xca, 0xa6, 0x2b, 0x52,
	0xe4, 0x19, 0x51, 0x34, 0x7c, 0xe9, 0xe0, 0xae, 0x38, 0xfe, 0xbd, 0x0b, 0xf0, 0x80, 0xe8, 0x98,
	0xfe, 0x50, 0xd3, 0x4a, 0x21, 0x0c, 0xdb, 0x2b, 0x2a, 0xab, 0x9c, 0x33, 0x9c, 0x8d, 0xbd, 0x49,
	0x3f, 0xde, 0x84, 0xe8, 0x53, 0x18, 0xf2, 0x5a, 0x25, 0x4a, 0x92, 0x8c, 0x26, 0x8c, 0x63, 0xcf,
	0xd0, 0xd1, 0xad, 0x75, 0x74, 0x43, 0x1e, 0xe0, 0xbb, 0x33, 0xff, 0xe1, 0x77, 0xa7, 0xd3, 0x6f,
	0xc9, 0xf4, 0xc7, 0xf7, 0xa6, 0x9f, 0x24, 0xd3, 0xef, 0x4f, 0x6e, 0xc7, 0xc0, 0x6b, 0x75, 0x6e,
	0xd4, 0xf7, 0x39, 0x7a, 0x17, 0xc0, 0xd4, 0x83, 0x94, 0xbc, 0x66, 0x0a, 0xb7, 0xc6, 0xde, 0xa4,
	0x1d, 0xed, 0xac, 0x23, 0x98, 0xf5, 0xf0, 0x2f, 0xbf, 0xfd, 0xfb, 0x77, 0x6b, 0xe2, 0xc5, 0x7d,
	0x41, 0xf4, 0xa9, 0xe5, 0xd1, 0x08, 0x7a, 0x69, 0x2d, 0x25, 0x65, 0xa9, 0xc6, 0x07, 0xd6, 0xc5,
	0xf3, 0x18, 0x1d, 0x01, 0x30, 0xae, 0xf2, 0x47, 0x3a, 0xa9, 0x65, 0x81, 0xdb, 0x96, 0xed, 0x3b,
	0xe4, 0x1b, 0x59, 0x18, 0x5a, 0x52, 0x55, 0x4b, 0x66, 0xe9, 0x8e, 0xa3, 0x1d, 0x62, 0xe8, 0xb7,
	0xa0, 0x4b, 0x84, 0x48, 0xf2, 0x0c, 0x77, 0xad, 0xfd, 0xdd, 0x75, 0x34, 0x90, 0x7d, 0xdf, 0x9b,
	0x75, 0x1e, 0x5e, 0x3c, 0x3d, 0xb9, 0x1d, 0x77, 0x88, 0x10, 0xf3, 0x0c, 0x1d, 0x42, 0xbf, 0xca,
	0x97, 0x2c, 0x51, 0x5a, 0x50, 0xbc, 0xed, 0x1c, 0x18, 0xe0, 0x5c, 0x0b, 0x8a, 0x3e, 0x84, 0xb6,
	0x39, 0xe3, 0x5d, 0x7b, 0xc3, 0x78, 0x1d, 0x1d, 0xc9, 0x43, 0xdf, 0x9b, 0xdd, 0xbc, 0x56, 0x80,
	0x93, 0xf0, 0xb3, 0x8b, 0xea, 0x82, 0x5d, 0x48, 0x53, 0x07, 0xab, 0x46, 0x67, 0x00, 0x5c, 0x66,
	0x54, 0x26, 0xa6, 0xa3, 0xb8, 0x37, 0xf6, 0x26, 0x83, 0xd9, 0x28, 0x70, 0xed, 0x0e, 0x36, 0xed,
	0x0e, 0xce, 0x37, 0xed, 0x8e, 0x60, 0x1d, 0x6d, 0xff, 0xe1, 0xb5, 0x7b, 0xde, 0x5d, 0x2f, 0xee,
	0xdb, 0x4c, 0xc3, 0xa1, 0x9b, 0xb0, 0x5d, 0x57, 0x54, 0x26, 0xb9, 0xc0, 0x7d, 0xeb, 0xab, 0x6b,
	0xc2, 0xb9, 0x78, 0x41, 0x64, 0x18, 0x5d, 0x23, 0x32, 0xf4, 0x26, 0xec, 0x08, 0xa2, 0xa9, 0x4c,
	0x48, 0x9a, 0xda, 0xea, 0x83, 0xa5, 0x87, 0x16, 0x3c, 0x75, 0x98, 0x29, 0x9b, 0x90, 0x3c, 0xab,
	0x53, 0x65, 0x2e, 0x18, 0xb8, 0xb2, 0x35, 0xc8, 0x3c, 0x43, 0x6f, 0xc0, 0x70, 0x43, 0x33, 0x52,
	0x52, 0x3c, 0xb4, 0x82, 0x41, 0x83, 0xdd, 0x27, 0x25, 0x45, 0x6f, 0x83, 0xbf, 0x91, 0x64, 0xb4,
	0x4a, 0x65, 0xbe, 0xa0, 0x78, 0xc7, 0xca, 0xf6, 0x1a, 0xfc, 0x5e, 0x03, 0x9b, 0x19, 0x4b, 0x2f,
	0x89, 0xac, 0xa8, 0xc2, 0x7b, 0x6e, 0xc6, 0x9a, 0xd0, 0x78, 0x4d, 0x49, 0x51, 0x2c, 0x48, 0xfa,
	0x24, 0x79, 0x5c, 0x71, 0x86, 0x7d, 0xe7, 0x75, 0x03, 0x7e, 0x51, 0x71, 0x86, 0x6e, 0x41, 0x8f,
	0x5e, 0x29, 0xc7, 0xef, 0xbb, 0x7c, 0x7a, 0xa5, 0x2c, 0x75, 0x04, 0x90, 0x5e, 0x12, 0xc6, 0x68,
	0x61, 0xbe, 0xf1, 0x8a, 0xfb, 0x46, 0x83, 0xcc, 0x33, 0x34, 0x85, 0x6e, 0x49, 0xd5, 0x25, 0xcf,
	0xf0, 0x62, 0xec, 0x4d, 0x76, 0x67, 0x83, 0x40, 0x10, 0x1d, 0x7c, 0x69, 0xa1, 0xa8, 0xb7, 0x8e,
	0x3a, 0xcf, 0xbc, 0x2d, 0xdf, 0x8b, 0x1b, 0xd1, 0xf1, 0x9f, 0x1e, 0x0c, 0xec, 0x6a, 0x54, 0x82,
	0xb3, 0xca, 0x7c, 0xb1, 0x2b, 0x69, 0x55, 0x17, 0xca, 0xce, 0xfe, 0x60, 0xb6, 0x6f, 0xd3, 0x63,
	0x3b, 0x5c, 0xb1, 0x25, 0xe2, 0x46, 0x80, 0x26, 0xe0, 0x37, 0xbb, 0x9f, 0xb8, 0xae, 0xe7, 0x19,
	0xde, 0xb2, 0x76, 0x76, 0x1b, 0xfc, 0x2b, 0x03, 0xcf, 0x33, 0x14, 0x40, 0x3b, 0x23, 0x8a, 0xe0,
	0xce, 0xb8, 0x65, 0x27, 0xc2, 0x5c, 0x79, 0xed, 0xd1, 0xe0, 0x1e, 0x51, 0xe4, 0x8c, 0x29, 0xa9,
	0x63, 0xab, 0x1b, 0x7d, 0x04, 0xfd, 0xe7, 0x10, 0xf2, 0xa1, 0xf5, 0x84, 0x6a, 0xb7, 0x8a, 0xb1,
	0x39, 0xa2, 0x03, 0xe8, 0xac, 0x48, 0x51, 0xd3, 0xe6, 0x35, 0x17, 0xdc, 0xd9, 0xfa, 0xd8, 0x9b,
	0x7d, 0x6d, 0xf7, 0xfc, 0x73, 0xf7, 0x3a, 0x3a, 0x83, 0xd6, 0x03, 0xa2, 0xd1, 0xde, 0x8b, 0xf7,
	0xec, 0xfe, 0x8f, 0xfc, 0xff, 0x1b, 0x38, 0x3e, 0x7c, 0xf6, 0xd7, 0x3f, 0xbf, 0x6e, 0xbd, 0x7a,
	0xec, 0x87, 0xab, 0xf7, 0x43, 0x41, 0x74, 0xf8, 0x93, 0x2b, 0xcf, 0xcf, 0x77, 0xbc, 0x77, 0xa2,
	0x1b, 0x70, 0x20, 0xea, 0x45, 0x20, 0x1e, 0xf3, 0xd4, 0x26, 0x36, 0x9f, 0x5b, 0x74, 0xed, 0x44,
	0x7f, 0xf0, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x19, 0x36, 0xeb, 0x03, 0x06, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PayGatewayClient is the client API for PayGateway service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PayGatewayClient interface {
	Pay(ctx context.Context, in *PayRequest, opts ...grpc.CallOption) (*PayResponse, error)
}

type payGatewayClient struct {
	cc *grpc.ClientConn
}

func NewPayGatewayClient(cc *grpc.ClientConn) PayGatewayClient {
	return &payGatewayClient{cc}
}

func (c *payGatewayClient) Pay(ctx context.Context, in *PayRequest, opts ...grpc.CallOption) (*PayResponse, error) {
	out := new(PayResponse)
	err := c.cc.Invoke(ctx, "/pay.PayGateway/Pay", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PayGatewayServer is the server API for PayGateway service.
type PayGatewayServer interface {
	Pay(context.Context, *PayRequest) (*PayResponse, error)
}

// UnimplementedPayGatewayServer can be embedded to have forward compatible implementations.
type UnimplementedPayGatewayServer struct {
}

func (*UnimplementedPayGatewayServer) Pay(ctx context.Context, req *PayRequest) (*PayResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Pay not implemented")
}

func RegisterPayGatewayServer(s *grpc.Server, srv PayGatewayServer) {
	s.RegisterService(&_PayGateway_serviceDesc, srv)
}

func _PayGateway_Pay_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PayGatewayServer).Pay(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pay.PayGateway/Pay",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PayGatewayServer).Pay(ctx, req.(*PayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PayGateway_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pay.PayGateway",
	HandlerType: (*PayGatewayServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Pay",
			Handler:    _PayGateway_Pay_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pay_gateway.proto",
}
