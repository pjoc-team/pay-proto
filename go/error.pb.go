// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: error.proto

package pay

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Error int32

const (
	// UNKNOWN
	Error_UNKNOWN Error = 0
	// Currency of capture must be the same as currency of authorization.
	Error_AUTH_CAPTURE_CURRENCY_MISMATCH Error = 1
	// Authentication failed due to missing authorization header, or invalid authentication credentials.
	Error_AUTHENTICATION_FAILURE Error = 2
	// Authorization has already been captured.
	Error_AUTHORIZATION_ALREADY_CAPTURED Error = 3
	// A denied authorization cannot be captured.
	Error_AUTHORIZATION_DENIED Error = 4
	// An expired authorization cannot be captured.
	Error_AUTHORIZATION_EXPIRED Error = 5
	// A voided authorization cannot be captured or reauthorized.
	Error_AUTHORIZATION_VOIDED Error = 6
	// Must be greater than zero. If the currency supports decimals, only two decimal place precision is supported.
	Error_CANNOT_BE_ZERO_OR_NEGATIVE Error = 7
	// A reauthorization cannot be voided. Please void the original parent authorization.
	Error_CANNOT_BE_VOIDED Error = 8
	// The requested action could not be performed, semantically incorrect, or failed business validation.
	Error_REFUND_NOT_PERMITTED_DUE_TO_CHARGEBACK Error = 9
	// The requested action could not be performed, semantically incorrect, or failed business validation.
	Error_CAPTURE_DISPUTED_PARTIAL_REFUND_NOT_ALLOWED Error = 10
	// The capture has already been fully refunded.
	Error_CAPTURE_FULLY_REFUNDED Error = 11
	// The value of the field should not be more than two decimal places.
	Error_DECIMAL_PRECISION Error = 12
	// Currency does not support decimals.
	Error_DECIMALS_NOT_SUPPORTED Error = 13
	// Requested invoice number has been previously captured. Possible duplicate transaction.
	Error_DUPLICATE_INVOICE_ID Error = 14
	// Account validations failed for the user.
	Error_INVALID_ACCOUNT_STATUS Error = 15
	// An internal server error has occurred.
	Error_INTERNAL_SERVER_ERROR Error = 16
	// Currency code should be a three-character ISO-4217 currency code.
	Error_INVALID_CURRENCY_CODE Error = 17
	// Specified invoice_id does not exist.
	Error_INVALID_INVOICE_ID Error = 18
	// The value of the field does not conform to the expected format.
	Error_INVALID_PARAMETER_SYNTAX Error = 19
	// The value of a field is invalid.
	Error_INVALID_PARAMETER_VALUE Error = 20
	// Payee account is invalid.
	Error_INVALID_PAYEE_ACCOUNT Error = 21
	// The platform_fees amount cannot be greater than the capture amount.
	Error_INVALID_PLATFORM_FEES_AMOUNT Error = 22
	// Specified resource ID does not exist. Please check the resource ID and try again.
	Error_INVALID_RESOURCE_ID Error = 23
	// The value of a field is either too short or too long.
	Error_INVALID_STRING_LENGTH Error = 24
	// The value of a field is too long.
	Error_INVALID_STRING_MAX_LENGTH Error = 25
	// Capture amount exceeds allowable limit. Please contact customer service or your account manager to request the change to your overage limit. The default overage limit is 115%, which allows the sum of all captures to be up to 115% of the authorization amount.
	Error_MAX_CAPTURE_AMOUNT_EXCEEDED Error = 26
	// Maximum number of allowable captures has been reached. No additional captures are possible for this authorization. Please contact customer service or your account manager to change the number of captures that be made for a given authorization.
	Error_MAX_CAPTURE_COUNT_EXCEEDED Error = 27
	// You have exceeded the number of refunds that can be processed per capture.
	Error_MAX_NUMBER_OF_REFUNDS_EXCEEDED Error = 28
	// A required field / parameter is missing.
	Error_MISSING_REQUIRED_PARAMETER Error = 29
	// Cannot void multiple authorizations.
	Error_MULTIPLE_AUTHORIZATIONS_FOUND Error = 30
	// You do not have permission to access or perform operations on this resource.
	Error_NOT_AUTHORIZED Error = 31
	// You cannot do a refund for an amount less than the original capture amount.
	Error_PARTIAL_REFUND_NOT_ALLOWED Error = 32
	// Transaction could not complete because payee account is locked or closed.
	Error_PAYEE_ACCOUNT_LOCKED_OR_CLOSED Error = 33
	// Payee account is restricted.
	Error_PAYEE_ACCOUNT_RESTRICTED Error = 34
	// The payer account cannot be used for this transaction.
	Error_PAYER_ACCOUNT_LOCKED_OR_CLOSED Error = 35
	// Payer cannot pay for this transaction.
	Error_PAYER_CANNOT_PAY Error = 36
	// Cannot initiate a refund as the capture is pending.
	Error_PENDING_CAPTURE Error = 37
	// You do not have permission to access or perform operations on this resource.
	Error_PERMISSION_DENIED Error = 38
	// Payee of the authorization has not granted permission to perform capture on the authorization.
	Error_PERMISSION_NOT_GRANTED Error = 39
	// Authorization has been previously captured and hence cannot be voided.
	Error_PREVIOUSLY_CAPTURED Error = 40
	// Authorization has been previously voided and hence cannot be voided again.
	Error_PREVIOUSLY_VOIDED Error = 41
	// The refund amount must be less than or equal to the capture amount that has not yet been refunded.
	Error_REFUND_AMOUNT_EXCEEDED Error = 42
	// Refund must be in the same currency as the capture.
	Error_REFUND_CAPTURE_CURRENCY_MISMATCH Error = 43
	// Capture could not be refunded due to insufficient funds.
	Error_REFUND_FAILED_INSUFFICIENT_FUNDS Error = 44
	// Full refund refused - partial refund has already been done on this payment.
	Error_REFUND_NOT_ALLOWED Error = 45
	// You are over the time limit to perform a refund on this capture.
	Error_REFUND_TIME_LIMIT_EXCEEDED Error = 46
	// PayPal's internal controls prevent authorization from being captured.
	Error_TRANSACTION_REFUSED Error = 47
	// Refund was refused by the payment source.
	Error_REFUND_NOT_SUPPORTED_FOR_PAYMENT_SOURCE Error = 48
	// Refund was refused by the payment source.
	Error_REFUND_TIME_EXCEEDED_FOR_PAYMENT_SOURCE Error = 49
)

// Enum value maps for Error.
var (
	Error_name = map[int32]string{
		0:  "UNKNOWN",
		1:  "AUTH_CAPTURE_CURRENCY_MISMATCH",
		2:  "AUTHENTICATION_FAILURE",
		3:  "AUTHORIZATION_ALREADY_CAPTURED",
		4:  "AUTHORIZATION_DENIED",
		5:  "AUTHORIZATION_EXPIRED",
		6:  "AUTHORIZATION_VOIDED",
		7:  "CANNOT_BE_ZERO_OR_NEGATIVE",
		8:  "CANNOT_BE_VOIDED",
		9:  "REFUND_NOT_PERMITTED_DUE_TO_CHARGEBACK",
		10: "CAPTURE_DISPUTED_PARTIAL_REFUND_NOT_ALLOWED",
		11: "CAPTURE_FULLY_REFUNDED",
		12: "DECIMAL_PRECISION",
		13: "DECIMALS_NOT_SUPPORTED",
		14: "DUPLICATE_INVOICE_ID",
		15: "INVALID_ACCOUNT_STATUS",
		16: "INTERNAL_SERVER_ERROR",
		17: "INVALID_CURRENCY_CODE",
		18: "INVALID_INVOICE_ID",
		19: "INVALID_PARAMETER_SYNTAX",
		20: "INVALID_PARAMETER_VALUE",
		21: "INVALID_PAYEE_ACCOUNT",
		22: "INVALID_PLATFORM_FEES_AMOUNT",
		23: "INVALID_RESOURCE_ID",
		24: "INVALID_STRING_LENGTH",
		25: "INVALID_STRING_MAX_LENGTH",
		26: "MAX_CAPTURE_AMOUNT_EXCEEDED",
		27: "MAX_CAPTURE_COUNT_EXCEEDED",
		28: "MAX_NUMBER_OF_REFUNDS_EXCEEDED",
		29: "MISSING_REQUIRED_PARAMETER",
		30: "MULTIPLE_AUTHORIZATIONS_FOUND",
		31: "NOT_AUTHORIZED",
		32: "PARTIAL_REFUND_NOT_ALLOWED",
		33: "PAYEE_ACCOUNT_LOCKED_OR_CLOSED",
		34: "PAYEE_ACCOUNT_RESTRICTED",
		35: "PAYER_ACCOUNT_LOCKED_OR_CLOSED",
		36: "PAYER_CANNOT_PAY",
		37: "PENDING_CAPTURE",
		38: "PERMISSION_DENIED",
		39: "PERMISSION_NOT_GRANTED",
		40: "PREVIOUSLY_CAPTURED",
		41: "PREVIOUSLY_VOIDED",
		42: "REFUND_AMOUNT_EXCEEDED",
		43: "REFUND_CAPTURE_CURRENCY_MISMATCH",
		44: "REFUND_FAILED_INSUFFICIENT_FUNDS",
		45: "REFUND_NOT_ALLOWED",
		46: "REFUND_TIME_LIMIT_EXCEEDED",
		47: "TRANSACTION_REFUSED",
		48: "REFUND_NOT_SUPPORTED_FOR_PAYMENT_SOURCE",
		49: "REFUND_TIME_EXCEEDED_FOR_PAYMENT_SOURCE",
	}
	Error_value = map[string]int32{
		"UNKNOWN":                                     0,
		"AUTH_CAPTURE_CURRENCY_MISMATCH":              1,
		"AUTHENTICATION_FAILURE":                      2,
		"AUTHORIZATION_ALREADY_CAPTURED":              3,
		"AUTHORIZATION_DENIED":                        4,
		"AUTHORIZATION_EXPIRED":                       5,
		"AUTHORIZATION_VOIDED":                        6,
		"CANNOT_BE_ZERO_OR_NEGATIVE":                  7,
		"CANNOT_BE_VOIDED":                            8,
		"REFUND_NOT_PERMITTED_DUE_TO_CHARGEBACK":      9,
		"CAPTURE_DISPUTED_PARTIAL_REFUND_NOT_ALLOWED": 10,
		"CAPTURE_FULLY_REFUNDED":                      11,
		"DECIMAL_PRECISION":                           12,
		"DECIMALS_NOT_SUPPORTED":                      13,
		"DUPLICATE_INVOICE_ID":                        14,
		"INVALID_ACCOUNT_STATUS":                      15,
		"INTERNAL_SERVER_ERROR":                       16,
		"INVALID_CURRENCY_CODE":                       17,
		"INVALID_INVOICE_ID":                          18,
		"INVALID_PARAMETER_SYNTAX":                    19,
		"INVALID_PARAMETER_VALUE":                     20,
		"INVALID_PAYEE_ACCOUNT":                       21,
		"INVALID_PLATFORM_FEES_AMOUNT":                22,
		"INVALID_RESOURCE_ID":                         23,
		"INVALID_STRING_LENGTH":                       24,
		"INVALID_STRING_MAX_LENGTH":                   25,
		"MAX_CAPTURE_AMOUNT_EXCEEDED":                 26,
		"MAX_CAPTURE_COUNT_EXCEEDED":                  27,
		"MAX_NUMBER_OF_REFUNDS_EXCEEDED":              28,
		"MISSING_REQUIRED_PARAMETER":                  29,
		"MULTIPLE_AUTHORIZATIONS_FOUND":               30,
		"NOT_AUTHORIZED":                              31,
		"PARTIAL_REFUND_NOT_ALLOWED":                  32,
		"PAYEE_ACCOUNT_LOCKED_OR_CLOSED":              33,
		"PAYEE_ACCOUNT_RESTRICTED":                    34,
		"PAYER_ACCOUNT_LOCKED_OR_CLOSED":              35,
		"PAYER_CANNOT_PAY":                            36,
		"PENDING_CAPTURE":                             37,
		"PERMISSION_DENIED":                           38,
		"PERMISSION_NOT_GRANTED":                      39,
		"PREVIOUSLY_CAPTURED":                         40,
		"PREVIOUSLY_VOIDED":                           41,
		"REFUND_AMOUNT_EXCEEDED":                      42,
		"REFUND_CAPTURE_CURRENCY_MISMATCH":            43,
		"REFUND_FAILED_INSUFFICIENT_FUNDS":            44,
		"REFUND_NOT_ALLOWED":                          45,
		"REFUND_TIME_LIMIT_EXCEEDED":                  46,
		"TRANSACTION_REFUSED":                         47,
		"REFUND_NOT_SUPPORTED_FOR_PAYMENT_SOURCE":     48,
		"REFUND_TIME_EXCEEDED_FOR_PAYMENT_SOURCE":     49,
	}
)

func (x Error) Enum() *Error {
	p := new(Error)
	*p = x
	return p
}

func (x Error) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Error) Descriptor() protoreflect.EnumDescriptor {
	return file_error_proto_enumTypes[0].Descriptor()
}

func (Error) Type() protoreflect.EnumType {
	return &file_error_proto_enumTypes[0]
}

func (x Error) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Error.Descriptor instead.
func (Error) EnumDescriptor() ([]byte, []int) {
	return file_error_proto_rawDescGZIP(), []int{0}
}

var File_error_proto protoreflect.FileDescriptor

var file_error_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x70,
	0x61, 0x79, 0x2a, 0xdb, 0x0b, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x0b, 0x0a, 0x07,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x22, 0x0a, 0x1e, 0x41, 0x55, 0x54,
	0x48, 0x5f, 0x43, 0x41, 0x50, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e,
	0x43, 0x59, 0x5f, 0x4d, 0x49, 0x53, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x10, 0x01, 0x12, 0x1a, 0x0a,
	0x16, 0x41, 0x55, 0x54, 0x48, 0x45, 0x4e, 0x54, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x10, 0x02, 0x12, 0x22, 0x0a, 0x1e, 0x41, 0x55, 0x54,
	0x48, 0x4f, 0x52, 0x49, 0x5a, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x4c, 0x52, 0x45, 0x41,
	0x44, 0x59, 0x5f, 0x43, 0x41, 0x50, 0x54, 0x55, 0x52, 0x45, 0x44, 0x10, 0x03, 0x12, 0x18, 0x0a,
	0x14, 0x41, 0x55, 0x54, 0x48, 0x4f, 0x52, 0x49, 0x5a, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44,
	0x45, 0x4e, 0x49, 0x45, 0x44, 0x10, 0x04, 0x12, 0x19, 0x0a, 0x15, 0x41, 0x55, 0x54, 0x48, 0x4f,
	0x52, 0x49, 0x5a, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44,
	0x10, 0x05, 0x12, 0x18, 0x0a, 0x14, 0x41, 0x55, 0x54, 0x48, 0x4f, 0x52, 0x49, 0x5a, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x56, 0x4f, 0x49, 0x44, 0x45, 0x44, 0x10, 0x06, 0x12, 0x1e, 0x0a, 0x1a,
	0x43, 0x41, 0x4e, 0x4e, 0x4f, 0x54, 0x5f, 0x42, 0x45, 0x5f, 0x5a, 0x45, 0x52, 0x4f, 0x5f, 0x4f,
	0x52, 0x5f, 0x4e, 0x45, 0x47, 0x41, 0x54, 0x49, 0x56, 0x45, 0x10, 0x07, 0x12, 0x14, 0x0a, 0x10,
	0x43, 0x41, 0x4e, 0x4e, 0x4f, 0x54, 0x5f, 0x42, 0x45, 0x5f, 0x56, 0x4f, 0x49, 0x44, 0x45, 0x44,
	0x10, 0x08, 0x12, 0x2a, 0x0a, 0x26, 0x52, 0x45, 0x46, 0x55, 0x4e, 0x44, 0x5f, 0x4e, 0x4f, 0x54,
	0x5f, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x54, 0x54, 0x45, 0x44, 0x5f, 0x44, 0x55, 0x45, 0x5f, 0x54,
	0x4f, 0x5f, 0x43, 0x48, 0x41, 0x52, 0x47, 0x45, 0x42, 0x41, 0x43, 0x4b, 0x10, 0x09, 0x12, 0x2f,
	0x0a, 0x2b, 0x43, 0x41, 0x50, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x44, 0x49, 0x53, 0x50, 0x55, 0x54,
	0x45, 0x44, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x49, 0x41, 0x4c, 0x5f, 0x52, 0x45, 0x46, 0x55, 0x4e,
	0x44, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x45, 0x44, 0x10, 0x0a, 0x12,
	0x1a, 0x0a, 0x16, 0x43, 0x41, 0x50, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x46, 0x55, 0x4c, 0x4c, 0x59,
	0x5f, 0x52, 0x45, 0x46, 0x55, 0x4e, 0x44, 0x45, 0x44, 0x10, 0x0b, 0x12, 0x15, 0x0a, 0x11, 0x44,
	0x45, 0x43, 0x49, 0x4d, 0x41, 0x4c, 0x5f, 0x50, 0x52, 0x45, 0x43, 0x49, 0x53, 0x49, 0x4f, 0x4e,
	0x10, 0x0c, 0x12, 0x1a, 0x0a, 0x16, 0x44, 0x45, 0x43, 0x49, 0x4d, 0x41, 0x4c, 0x53, 0x5f, 0x4e,
	0x4f, 0x54, 0x5f, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x10, 0x0d, 0x12, 0x18,
	0x0a, 0x14, 0x44, 0x55, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x4f,
	0x49, 0x43, 0x45, 0x5f, 0x49, 0x44, 0x10, 0x0e, 0x12, 0x1a, 0x0a, 0x16, 0x49, 0x4e, 0x56, 0x41,
	0x4c, 0x49, 0x44, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x10, 0x0f, 0x12, 0x19, 0x0a, 0x15, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c,
	0x5f, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x10, 0x12,
	0x19, 0x0a, 0x15, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x43, 0x55, 0x52, 0x52, 0x45,
	0x4e, 0x43, 0x59, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x10, 0x11, 0x12, 0x16, 0x0a, 0x12, 0x49, 0x4e,
	0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x49, 0x4e, 0x56, 0x4f, 0x49, 0x43, 0x45, 0x5f, 0x49, 0x44,
	0x10, 0x12, 0x12, 0x1c, 0x0a, 0x18, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x50, 0x41,
	0x52, 0x41, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x5f, 0x53, 0x59, 0x4e, 0x54, 0x41, 0x58, 0x10, 0x13,
	0x12, 0x1b, 0x0a, 0x17, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x50, 0x41, 0x52, 0x41,
	0x4d, 0x45, 0x54, 0x45, 0x52, 0x5f, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x10, 0x14, 0x12, 0x19, 0x0a,
	0x15, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x50, 0x41, 0x59, 0x45, 0x45, 0x5f, 0x41,
	0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x15, 0x12, 0x20, 0x0a, 0x1c, 0x49, 0x4e, 0x56, 0x41,
	0x4c, 0x49, 0x44, 0x5f, 0x50, 0x4c, 0x41, 0x54, 0x46, 0x4f, 0x52, 0x4d, 0x5f, 0x46, 0x45, 0x45,
	0x53, 0x5f, 0x41, 0x4d, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x16, 0x12, 0x17, 0x0a, 0x13, 0x49, 0x4e,
	0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x49,
	0x44, 0x10, 0x17, 0x12, 0x19, 0x0a, 0x15, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x53,
	0x54, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x4c, 0x45, 0x4e, 0x47, 0x54, 0x48, 0x10, 0x18, 0x12, 0x1d,
	0x0a, 0x19, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47,
	0x5f, 0x4d, 0x41, 0x58, 0x5f, 0x4c, 0x45, 0x4e, 0x47, 0x54, 0x48, 0x10, 0x19, 0x12, 0x1f, 0x0a,
	0x1b, 0x4d, 0x41, 0x58, 0x5f, 0x43, 0x41, 0x50, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x41, 0x4d, 0x4f,
	0x55, 0x4e, 0x54, 0x5f, 0x45, 0x58, 0x43, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10, 0x1a, 0x12, 0x1e,
	0x0a, 0x1a, 0x4d, 0x41, 0x58, 0x5f, 0x43, 0x41, 0x50, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x43, 0x4f,
	0x55, 0x4e, 0x54, 0x5f, 0x45, 0x58, 0x43, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10, 0x1b, 0x12, 0x22,
	0x0a, 0x1e, 0x4d, 0x41, 0x58, 0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x5f, 0x4f, 0x46, 0x5f,
	0x52, 0x45, 0x46, 0x55, 0x4e, 0x44, 0x53, 0x5f, 0x45, 0x58, 0x43, 0x45, 0x45, 0x44, 0x45, 0x44,
	0x10, 0x1c, 0x12, 0x1e, 0x0a, 0x1a, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4e, 0x47, 0x5f, 0x52, 0x45,
	0x51, 0x55, 0x49, 0x52, 0x45, 0x44, 0x5f, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x45, 0x54, 0x45, 0x52,
	0x10, 0x1d, 0x12, 0x21, 0x0a, 0x1d, 0x4d, 0x55, 0x4c, 0x54, 0x49, 0x50, 0x4c, 0x45, 0x5f, 0x41,
	0x55, 0x54, 0x48, 0x4f, 0x52, 0x49, 0x5a, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x53, 0x5f, 0x46, 0x4f,
	0x55, 0x4e, 0x44, 0x10, 0x1e, 0x12, 0x12, 0x0a, 0x0e, 0x4e, 0x4f, 0x54, 0x5f, 0x41, 0x55, 0x54,
	0x48, 0x4f, 0x52, 0x49, 0x5a, 0x45, 0x44, 0x10, 0x1f, 0x12, 0x1e, 0x0a, 0x1a, 0x50, 0x41, 0x52,
	0x54, 0x49, 0x41, 0x4c, 0x5f, 0x52, 0x45, 0x46, 0x55, 0x4e, 0x44, 0x5f, 0x4e, 0x4f, 0x54, 0x5f,
	0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x45, 0x44, 0x10, 0x20, 0x12, 0x22, 0x0a, 0x1e, 0x50, 0x41, 0x59,
	0x45, 0x45, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x4c, 0x4f, 0x43, 0x4b, 0x45,
	0x44, 0x5f, 0x4f, 0x52, 0x5f, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x44, 0x10, 0x21, 0x12, 0x1c, 0x0a,
	0x18, 0x50, 0x41, 0x59, 0x45, 0x45, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x52,
	0x45, 0x53, 0x54, 0x52, 0x49, 0x43, 0x54, 0x45, 0x44, 0x10, 0x22, 0x12, 0x22, 0x0a, 0x1e, 0x50,
	0x41, 0x59, 0x45, 0x52, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x4c, 0x4f, 0x43,
	0x4b, 0x45, 0x44, 0x5f, 0x4f, 0x52, 0x5f, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x44, 0x10, 0x23, 0x12,
	0x14, 0x0a, 0x10, 0x50, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x43, 0x41, 0x4e, 0x4e, 0x4f, 0x54, 0x5f,
	0x50, 0x41, 0x59, 0x10, 0x24, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47,
	0x5f, 0x43, 0x41, 0x50, 0x54, 0x55, 0x52, 0x45, 0x10, 0x25, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x45,
	0x52, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x45, 0x4e, 0x49, 0x45, 0x44, 0x10,
	0x26, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f,
	0x4e, 0x4f, 0x54, 0x5f, 0x47, 0x52, 0x41, 0x4e, 0x54, 0x45, 0x44, 0x10, 0x27, 0x12, 0x17, 0x0a,
	0x13, 0x50, 0x52, 0x45, 0x56, 0x49, 0x4f, 0x55, 0x53, 0x4c, 0x59, 0x5f, 0x43, 0x41, 0x50, 0x54,
	0x55, 0x52, 0x45, 0x44, 0x10, 0x28, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x52, 0x45, 0x56, 0x49, 0x4f,
	0x55, 0x53, 0x4c, 0x59, 0x5f, 0x56, 0x4f, 0x49, 0x44, 0x45, 0x44, 0x10, 0x29, 0x12, 0x1a, 0x0a,
	0x16, 0x52, 0x45, 0x46, 0x55, 0x4e, 0x44, 0x5f, 0x41, 0x4d, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x45,
	0x58, 0x43, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10, 0x2a, 0x12, 0x24, 0x0a, 0x20, 0x52, 0x45, 0x46,
	0x55, 0x4e, 0x44, 0x5f, 0x43, 0x41, 0x50, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x43, 0x55, 0x52, 0x52,
	0x45, 0x4e, 0x43, 0x59, 0x5f, 0x4d, 0x49, 0x53, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x10, 0x2b, 0x12,
	0x24, 0x0a, 0x20, 0x52, 0x45, 0x46, 0x55, 0x4e, 0x44, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44,
	0x5f, 0x49, 0x4e, 0x53, 0x55, 0x46, 0x46, 0x49, 0x43, 0x49, 0x45, 0x4e, 0x54, 0x5f, 0x46, 0x55,
	0x4e, 0x44, 0x53, 0x10, 0x2c, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x45, 0x46, 0x55, 0x4e, 0x44, 0x5f,
	0x4e, 0x4f, 0x54, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x45, 0x44, 0x10, 0x2d, 0x12, 0x1e, 0x0a,
	0x1a, 0x52, 0x45, 0x46, 0x55, 0x4e, 0x44, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x4c, 0x49, 0x4d,
	0x49, 0x54, 0x5f, 0x45, 0x58, 0x43, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10, 0x2e, 0x12, 0x17, 0x0a,
	0x13, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x46,
	0x55, 0x53, 0x45, 0x44, 0x10, 0x2f, 0x12, 0x2b, 0x0a, 0x27, 0x52, 0x45, 0x46, 0x55, 0x4e, 0x44,
	0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x5f, 0x46,
	0x4f, 0x52, 0x5f, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x4f, 0x55, 0x52, 0x43,
	0x45, 0x10, 0x30, 0x12, 0x2b, 0x0a, 0x27, 0x52, 0x45, 0x46, 0x55, 0x4e, 0x44, 0x5f, 0x54, 0x49,
	0x4d, 0x45, 0x5f, 0x45, 0x58, 0x43, 0x45, 0x45, 0x44, 0x45, 0x44, 0x5f, 0x46, 0x4f, 0x52, 0x5f,
	0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x10, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_error_proto_rawDescOnce sync.Once
	file_error_proto_rawDescData = file_error_proto_rawDesc
)

func file_error_proto_rawDescGZIP() []byte {
	file_error_proto_rawDescOnce.Do(func() {
		file_error_proto_rawDescData = protoimpl.X.CompressGZIP(file_error_proto_rawDescData)
	})
	return file_error_proto_rawDescData
}

var file_error_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_error_proto_goTypes = []interface{}{
	(Error)(0), // 0: pay.Error
}
var file_error_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_error_proto_init() }
func file_error_proto_init() {
	if File_error_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_error_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_error_proto_goTypes,
		DependencyIndexes: file_error_proto_depIdxs,
		EnumInfos:         file_error_proto_enumTypes,
	}.Build()
	File_error_proto = out.File
	file_error_proto_rawDesc = nil
	file_error_proto_goTypes = nil
	file_error_proto_depIdxs = nil
}
